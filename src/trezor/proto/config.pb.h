// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#ifndef PROTOBUF_config_2eproto__INCLUDED
#define PROTOBUF_config_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
namespace TrezorProtobuf {
class Configuration;
class ConfigurationDefaultTypeInternal;
extern ConfigurationDefaultTypeInternal _Configuration_default_instance_;
class DeviceDescriptor;
class DeviceDescriptorDefaultTypeInternal;
extern DeviceDescriptorDefaultTypeInternal _DeviceDescriptor_default_instance_;
}  // namespace TrezorProtobuf
namespace google {
namespace protobuf {
class DescriptorProto;
class DescriptorProtoDefaultTypeInternal;
extern DescriptorProtoDefaultTypeInternal _DescriptorProto_default_instance_;
class DescriptorProto_ExtensionRange;
class DescriptorProto_ExtensionRangeDefaultTypeInternal;
extern DescriptorProto_ExtensionRangeDefaultTypeInternal _DescriptorProto_ExtensionRange_default_instance_;
class EnumDescriptorProto;
class EnumDescriptorProtoDefaultTypeInternal;
extern EnumDescriptorProtoDefaultTypeInternal _EnumDescriptorProto_default_instance_;
class EnumOptions;
class EnumOptionsDefaultTypeInternal;
extern EnumOptionsDefaultTypeInternal _EnumOptions_default_instance_;
class EnumValueDescriptorProto;
class EnumValueDescriptorProtoDefaultTypeInternal;
extern EnumValueDescriptorProtoDefaultTypeInternal _EnumValueDescriptorProto_default_instance_;
class EnumValueOptions;
class EnumValueOptionsDefaultTypeInternal;
extern EnumValueOptionsDefaultTypeInternal _EnumValueOptions_default_instance_;
class FieldDescriptorProto;
class FieldDescriptorProtoDefaultTypeInternal;
extern FieldDescriptorProtoDefaultTypeInternal _FieldDescriptorProto_default_instance_;
class FieldOptions;
class FieldOptionsDefaultTypeInternal;
extern FieldOptionsDefaultTypeInternal _FieldOptions_default_instance_;
class FileDescriptorProto;
class FileDescriptorProtoDefaultTypeInternal;
extern FileDescriptorProtoDefaultTypeInternal _FileDescriptorProto_default_instance_;
class FileDescriptorSet;
class FileDescriptorSetDefaultTypeInternal;
extern FileDescriptorSetDefaultTypeInternal _FileDescriptorSet_default_instance_;
class FileOptions;
class FileOptionsDefaultTypeInternal;
extern FileOptionsDefaultTypeInternal _FileOptions_default_instance_;
class MessageOptions;
class MessageOptionsDefaultTypeInternal;
extern MessageOptionsDefaultTypeInternal _MessageOptions_default_instance_;
class MethodDescriptorProto;
class MethodDescriptorProtoDefaultTypeInternal;
extern MethodDescriptorProtoDefaultTypeInternal _MethodDescriptorProto_default_instance_;
class MethodOptions;
class MethodOptionsDefaultTypeInternal;
extern MethodOptionsDefaultTypeInternal _MethodOptions_default_instance_;
class ServiceDescriptorProto;
class ServiceDescriptorProtoDefaultTypeInternal;
extern ServiceDescriptorProtoDefaultTypeInternal _ServiceDescriptorProto_default_instance_;
class ServiceOptions;
class ServiceOptionsDefaultTypeInternal;
extern ServiceOptionsDefaultTypeInternal _ServiceOptions_default_instance_;
class SourceCodeInfo;
class SourceCodeInfoDefaultTypeInternal;
extern SourceCodeInfoDefaultTypeInternal _SourceCodeInfo_default_instance_;
class SourceCodeInfo_Location;
class SourceCodeInfo_LocationDefaultTypeInternal;
extern SourceCodeInfo_LocationDefaultTypeInternal _SourceCodeInfo_Location_default_instance_;
class UninterpretedOption;
class UninterpretedOptionDefaultTypeInternal;
extern UninterpretedOptionDefaultTypeInternal _UninterpretedOption_default_instance_;
class UninterpretedOption_NamePart;
class UninterpretedOption_NamePartDefaultTypeInternal;
extern UninterpretedOption_NamePartDefaultTypeInternal _UninterpretedOption_NamePart_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace TrezorProtobuf {

namespace protobuf_config_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_config_2eproto

// ===================================================================

class DeviceDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TrezorProtobuf.DeviceDescriptor) */ {
 public:
  DeviceDescriptor();
  virtual ~DeviceDescriptor();

  DeviceDescriptor(const DeviceDescriptor& from);

  inline DeviceDescriptor& operator=(const DeviceDescriptor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceDescriptor& default_instance();

  static inline const DeviceDescriptor* internal_default_instance() {
    return reinterpret_cast<const DeviceDescriptor*>(
               &_DeviceDescriptor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DeviceDescriptor* other);

  // implements Message ----------------------------------------------

  inline DeviceDescriptor* New() const PROTOBUF_FINAL { return New(NULL); }

  DeviceDescriptor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceDescriptor& from);
  void MergeFrom(const DeviceDescriptor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string serial_number = 3;
  bool has_serial_number() const;
  void clear_serial_number();
  static const int kSerialNumberFieldNumber = 3;
  const ::std::string& serial_number() const;
  void set_serial_number(const ::std::string& value);
  #if LANG_CXX11
  void set_serial_number(::std::string&& value);
  #endif
  void set_serial_number(const char* value);
  void set_serial_number(const char* value, size_t size);
  ::std::string* mutable_serial_number();
  ::std::string* release_serial_number();
  void set_allocated_serial_number(::std::string* serial_number);

  // optional string path = 4;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 4;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional uint32 vendor_id = 1;
  bool has_vendor_id() const;
  void clear_vendor_id();
  static const int kVendorIdFieldNumber = 1;
  ::google::protobuf::uint32 vendor_id() const;
  void set_vendor_id(::google::protobuf::uint32 value);

  // optional uint32 product_id = 2;
  bool has_product_id() const;
  void clear_product_id();
  static const int kProductIdFieldNumber = 2;
  ::google::protobuf::uint32 product_id() const;
  void set_product_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TrezorProtobuf.DeviceDescriptor)
 private:
  void set_has_vendor_id();
  void clear_has_vendor_id();
  void set_has_product_id();
  void clear_has_product_id();
  void set_has_serial_number();
  void clear_has_serial_number();
  void set_has_path();
  void clear_has_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr serial_number_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::uint32 vendor_id_;
  ::google::protobuf::uint32 product_id_;
  friend struct protobuf_config_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Configuration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TrezorProtobuf.Configuration) */ {
 public:
  Configuration();
  virtual ~Configuration();

  Configuration(const Configuration& from);

  inline Configuration& operator=(const Configuration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration& default_instance();

  static inline const Configuration* internal_default_instance() {
    return reinterpret_cast<const Configuration*>(
               &_Configuration_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Configuration* other);

  // implements Message ----------------------------------------------

  inline Configuration* New() const PROTOBUF_FINAL { return New(NULL); }

  Configuration* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Configuration& from);
  void MergeFrom(const Configuration& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Configuration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string whitelist_urls = 1;
  int whitelist_urls_size() const;
  void clear_whitelist_urls();
  static const int kWhitelistUrlsFieldNumber = 1;
  const ::std::string& whitelist_urls(int index) const;
  ::std::string* mutable_whitelist_urls(int index);
  void set_whitelist_urls(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_whitelist_urls(int index, ::std::string&& value);
  #endif
  void set_whitelist_urls(int index, const char* value);
  void set_whitelist_urls(int index, const char* value, size_t size);
  ::std::string* add_whitelist_urls();
  void add_whitelist_urls(const ::std::string& value);
  #if LANG_CXX11
  void add_whitelist_urls(::std::string&& value);
  #endif
  void add_whitelist_urls(const char* value);
  void add_whitelist_urls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& whitelist_urls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_whitelist_urls();

  // repeated string blacklist_urls = 2;
  int blacklist_urls_size() const;
  void clear_blacklist_urls();
  static const int kBlacklistUrlsFieldNumber = 2;
  const ::std::string& blacklist_urls(int index) const;
  ::std::string* mutable_blacklist_urls(int index);
  void set_blacklist_urls(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_blacklist_urls(int index, ::std::string&& value);
  #endif
  void set_blacklist_urls(int index, const char* value);
  void set_blacklist_urls(int index, const char* value, size_t size);
  ::std::string* add_blacklist_urls();
  void add_blacklist_urls(const ::std::string& value);
  #if LANG_CXX11
  void add_blacklist_urls(::std::string&& value);
  #endif
  void add_blacklist_urls(const char* value);
  void add_blacklist_urls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& blacklist_urls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_blacklist_urls();

  // repeated .TrezorProtobuf.DeviceDescriptor known_devices = 4;
  int known_devices_size() const;
  void clear_known_devices();
  static const int kKnownDevicesFieldNumber = 4;
  const ::TrezorProtobuf::DeviceDescriptor& known_devices(int index) const;
  ::TrezorProtobuf::DeviceDescriptor* mutable_known_devices(int index);
  ::TrezorProtobuf::DeviceDescriptor* add_known_devices();
  ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::DeviceDescriptor >*
      mutable_known_devices();
  const ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::DeviceDescriptor >&
      known_devices() const;

  // required .google.protobuf.FileDescriptorSet wire_protocol = 3;
  bool has_wire_protocol() const;
  void clear_wire_protocol();
  static const int kWireProtocolFieldNumber = 3;
  const ::google::protobuf::FileDescriptorSet& wire_protocol() const;
  ::google::protobuf::FileDescriptorSet* mutable_wire_protocol();
  ::google::protobuf::FileDescriptorSet* release_wire_protocol();
  void set_allocated_wire_protocol(::google::protobuf::FileDescriptorSet* wire_protocol);

  // optional uint32 valid_until = 5;
  bool has_valid_until() const;
  void clear_valid_until();
  static const int kValidUntilFieldNumber = 5;
  ::google::protobuf::uint32 valid_until() const;
  void set_valid_until(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TrezorProtobuf.Configuration)
 private:
  void set_has_wire_protocol();
  void clear_has_wire_protocol();
  void set_has_valid_until();
  void clear_has_valid_until();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> whitelist_urls_;
  ::google::protobuf::RepeatedPtrField< ::std::string> blacklist_urls_;
  ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::DeviceDescriptor > known_devices_;
  ::google::protobuf::FileDescriptorSet* wire_protocol_;
  ::google::protobuf::uint32 valid_until_;
  friend struct protobuf_config_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceDescriptor

// optional uint32 vendor_id = 1;
inline bool DeviceDescriptor::has_vendor_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeviceDescriptor::set_has_vendor_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeviceDescriptor::clear_has_vendor_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeviceDescriptor::clear_vendor_id() {
  vendor_id_ = 0u;
  clear_has_vendor_id();
}
inline ::google::protobuf::uint32 DeviceDescriptor::vendor_id() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.DeviceDescriptor.vendor_id)
  return vendor_id_;
}
inline void DeviceDescriptor::set_vendor_id(::google::protobuf::uint32 value) {
  set_has_vendor_id();
  vendor_id_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.DeviceDescriptor.vendor_id)
}

// optional uint32 product_id = 2;
inline bool DeviceDescriptor::has_product_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeviceDescriptor::set_has_product_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeviceDescriptor::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeviceDescriptor::clear_product_id() {
  product_id_ = 0u;
  clear_has_product_id();
}
inline ::google::protobuf::uint32 DeviceDescriptor::product_id() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.DeviceDescriptor.product_id)
  return product_id_;
}
inline void DeviceDescriptor::set_product_id(::google::protobuf::uint32 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.DeviceDescriptor.product_id)
}

// optional string serial_number = 3;
inline bool DeviceDescriptor::has_serial_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceDescriptor::set_has_serial_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceDescriptor::clear_has_serial_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceDescriptor::clear_serial_number() {
  serial_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serial_number();
}
inline const ::std::string& DeviceDescriptor::serial_number() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.DeviceDescriptor.serial_number)
  return serial_number_.GetNoArena();
}
inline void DeviceDescriptor::set_serial_number(const ::std::string& value) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.DeviceDescriptor.serial_number)
}
#if LANG_CXX11
inline void DeviceDescriptor::set_serial_number(::std::string&& value) {
  set_has_serial_number();
  serial_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.DeviceDescriptor.serial_number)
}
#endif
inline void DeviceDescriptor::set_serial_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.DeviceDescriptor.serial_number)
}
inline void DeviceDescriptor::set_serial_number(const char* value, size_t size) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.DeviceDescriptor.serial_number)
}
inline ::std::string* DeviceDescriptor::mutable_serial_number() {
  set_has_serial_number();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.DeviceDescriptor.serial_number)
  return serial_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceDescriptor::release_serial_number() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.DeviceDescriptor.serial_number)
  clear_has_serial_number();
  return serial_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceDescriptor::set_allocated_serial_number(::std::string* serial_number) {
  if (serial_number != NULL) {
    set_has_serial_number();
  } else {
    clear_has_serial_number();
  }
  serial_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial_number);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.DeviceDescriptor.serial_number)
}

// optional string path = 4;
inline bool DeviceDescriptor::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceDescriptor::set_has_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceDescriptor::clear_has_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceDescriptor::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& DeviceDescriptor::path() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.DeviceDescriptor.path)
  return path_.GetNoArena();
}
inline void DeviceDescriptor::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.DeviceDescriptor.path)
}
#if LANG_CXX11
inline void DeviceDescriptor::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.DeviceDescriptor.path)
}
#endif
inline void DeviceDescriptor::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.DeviceDescriptor.path)
}
inline void DeviceDescriptor::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.DeviceDescriptor.path)
}
inline ::std::string* DeviceDescriptor::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.DeviceDescriptor.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceDescriptor::release_path() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.DeviceDescriptor.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceDescriptor::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.DeviceDescriptor.path)
}

// -------------------------------------------------------------------

// Configuration

// repeated string whitelist_urls = 1;
inline int Configuration::whitelist_urls_size() const {
  return whitelist_urls_.size();
}
inline void Configuration::clear_whitelist_urls() {
  whitelist_urls_.Clear();
}
inline const ::std::string& Configuration::whitelist_urls(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Configuration.whitelist_urls)
  return whitelist_urls_.Get(index);
}
inline ::std::string* Configuration::mutable_whitelist_urls(int index) {
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Configuration.whitelist_urls)
  return whitelist_urls_.Mutable(index);
}
inline void Configuration::set_whitelist_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Configuration.whitelist_urls)
  whitelist_urls_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Configuration::set_whitelist_urls(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Configuration.whitelist_urls)
  whitelist_urls_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Configuration::set_whitelist_urls(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  whitelist_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.Configuration.whitelist_urls)
}
inline void Configuration::set_whitelist_urls(int index, const char* value, size_t size) {
  whitelist_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.Configuration.whitelist_urls)
}
inline ::std::string* Configuration::add_whitelist_urls() {
  // @@protoc_insertion_point(field_add_mutable:TrezorProtobuf.Configuration.whitelist_urls)
  return whitelist_urls_.Add();
}
inline void Configuration::add_whitelist_urls(const ::std::string& value) {
  whitelist_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TrezorProtobuf.Configuration.whitelist_urls)
}
#if LANG_CXX11
inline void Configuration::add_whitelist_urls(::std::string&& value) {
  whitelist_urls_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:TrezorProtobuf.Configuration.whitelist_urls)
}
#endif
inline void Configuration::add_whitelist_urls(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  whitelist_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TrezorProtobuf.Configuration.whitelist_urls)
}
inline void Configuration::add_whitelist_urls(const char* value, size_t size) {
  whitelist_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TrezorProtobuf.Configuration.whitelist_urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Configuration::whitelist_urls() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.Configuration.whitelist_urls)
  return whitelist_urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Configuration::mutable_whitelist_urls() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.Configuration.whitelist_urls)
  return &whitelist_urls_;
}

// repeated string blacklist_urls = 2;
inline int Configuration::blacklist_urls_size() const {
  return blacklist_urls_.size();
}
inline void Configuration::clear_blacklist_urls() {
  blacklist_urls_.Clear();
}
inline const ::std::string& Configuration::blacklist_urls(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Configuration.blacklist_urls)
  return blacklist_urls_.Get(index);
}
inline ::std::string* Configuration::mutable_blacklist_urls(int index) {
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Configuration.blacklist_urls)
  return blacklist_urls_.Mutable(index);
}
inline void Configuration::set_blacklist_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Configuration.blacklist_urls)
  blacklist_urls_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Configuration::set_blacklist_urls(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Configuration.blacklist_urls)
  blacklist_urls_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Configuration::set_blacklist_urls(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  blacklist_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.Configuration.blacklist_urls)
}
inline void Configuration::set_blacklist_urls(int index, const char* value, size_t size) {
  blacklist_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.Configuration.blacklist_urls)
}
inline ::std::string* Configuration::add_blacklist_urls() {
  // @@protoc_insertion_point(field_add_mutable:TrezorProtobuf.Configuration.blacklist_urls)
  return blacklist_urls_.Add();
}
inline void Configuration::add_blacklist_urls(const ::std::string& value) {
  blacklist_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TrezorProtobuf.Configuration.blacklist_urls)
}
#if LANG_CXX11
inline void Configuration::add_blacklist_urls(::std::string&& value) {
  blacklist_urls_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:TrezorProtobuf.Configuration.blacklist_urls)
}
#endif
inline void Configuration::add_blacklist_urls(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  blacklist_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TrezorProtobuf.Configuration.blacklist_urls)
}
inline void Configuration::add_blacklist_urls(const char* value, size_t size) {
  blacklist_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TrezorProtobuf.Configuration.blacklist_urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Configuration::blacklist_urls() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.Configuration.blacklist_urls)
  return blacklist_urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Configuration::mutable_blacklist_urls() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.Configuration.blacklist_urls)
  return &blacklist_urls_;
}

// required .google.protobuf.FileDescriptorSet wire_protocol = 3;
inline bool Configuration::has_wire_protocol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Configuration::set_has_wire_protocol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Configuration::clear_has_wire_protocol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Configuration::clear_wire_protocol() {
  if (wire_protocol_ != NULL) wire_protocol_->::google::protobuf::FileDescriptorSet::Clear();
  clear_has_wire_protocol();
}
inline const ::google::protobuf::FileDescriptorSet& Configuration::wire_protocol() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Configuration.wire_protocol)
  return wire_protocol_ != NULL ? *wire_protocol_
                         : *::google::protobuf::FileDescriptorSet::internal_default_instance();
}
inline ::google::protobuf::FileDescriptorSet* Configuration::mutable_wire_protocol() {
  set_has_wire_protocol();
  if (wire_protocol_ == NULL) {
    wire_protocol_ = new ::google::protobuf::FileDescriptorSet;
  }
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Configuration.wire_protocol)
  return wire_protocol_;
}
inline ::google::protobuf::FileDescriptorSet* Configuration::release_wire_protocol() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.Configuration.wire_protocol)
  clear_has_wire_protocol();
  ::google::protobuf::FileDescriptorSet* temp = wire_protocol_;
  wire_protocol_ = NULL;
  return temp;
}
inline void Configuration::set_allocated_wire_protocol(::google::protobuf::FileDescriptorSet* wire_protocol) {
  delete wire_protocol_;
  wire_protocol_ = wire_protocol;
  if (wire_protocol) {
    set_has_wire_protocol();
  } else {
    clear_has_wire_protocol();
  }
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.Configuration.wire_protocol)
}

// repeated .TrezorProtobuf.DeviceDescriptor known_devices = 4;
inline int Configuration::known_devices_size() const {
  return known_devices_.size();
}
inline void Configuration::clear_known_devices() {
  known_devices_.Clear();
}
inline const ::TrezorProtobuf::DeviceDescriptor& Configuration::known_devices(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Configuration.known_devices)
  return known_devices_.Get(index);
}
inline ::TrezorProtobuf::DeviceDescriptor* Configuration::mutable_known_devices(int index) {
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Configuration.known_devices)
  return known_devices_.Mutable(index);
}
inline ::TrezorProtobuf::DeviceDescriptor* Configuration::add_known_devices() {
  // @@protoc_insertion_point(field_add:TrezorProtobuf.Configuration.known_devices)
  return known_devices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::DeviceDescriptor >*
Configuration::mutable_known_devices() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.Configuration.known_devices)
  return &known_devices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::DeviceDescriptor >&
Configuration::known_devices() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.Configuration.known_devices)
  return known_devices_;
}

// optional uint32 valid_until = 5;
inline bool Configuration::has_valid_until() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Configuration::set_has_valid_until() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Configuration::clear_has_valid_until() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Configuration::clear_valid_until() {
  valid_until_ = 0u;
  clear_has_valid_until();
}
inline ::google::protobuf::uint32 Configuration::valid_until() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Configuration.valid_until)
  return valid_until_;
}
inline void Configuration::set_valid_until(::google::protobuf::uint32 value) {
  set_has_valid_until();
  valid_until_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Configuration.valid_until)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace TrezorProtobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2eproto__INCLUDED
