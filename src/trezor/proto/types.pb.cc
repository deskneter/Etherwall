// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TrezorProtobuf {
class HDNodeTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HDNodeType> {
} _HDNodeType_default_instance_;
class HDNodePathTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HDNodePathType> {
} _HDNodePathType_default_instance_;
class CoinTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CoinType> {
} _CoinType_default_instance_;
class MultisigRedeemScriptTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MultisigRedeemScriptType> {
} _MultisigRedeemScriptType_default_instance_;
class TxInputTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TxInputType> {
} _TxInputType_default_instance_;
class TxOutputTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TxOutputType> {
} _TxOutputType_default_instance_;
class TxOutputBinTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TxOutputBinType> {
} _TxOutputBinType_default_instance_;
class TransactionTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TransactionType> {
} _TransactionType_default_instance_;
class TxRequestDetailsTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TxRequestDetailsType> {
} _TxRequestDetailsType_default_instance_;
class TxRequestSerializedTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TxRequestSerializedType> {
} _TxRequestSerializedType_default_instance_;
class IdentityTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IdentityType> {
} _IdentityType_default_instance_;

namespace protobuf_types_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodeType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodeType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodeType, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodeType, fingerprint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodeType, child_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodeType, chain_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodeType, private_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodeType, public_key_),
  3,
  4,
  5,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodePathType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodePathType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodePathType, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HDNodePathType, address_n_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, coin_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, coin_shortcut_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, address_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, maxfee_kb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, address_type_p2sh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, signed_message_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, xpub_magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, xprv_magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoinType, segwit_),
  0,
  1,
  4,
  3,
  7,
  2,
  8,
  6,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultisigRedeemScriptType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultisigRedeemScriptType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultisigRedeemScriptType, pubkeys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultisigRedeemScriptType, signatures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultisigRedeemScriptType, m_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, prev_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, prev_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, script_sig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, script_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, multisig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxInputType, amount_),
  ~0u,
  0,
  3,
  1,
  6,
  4,
  2,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputType, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputType, address_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputType, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputType, script_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputType, multisig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputType, op_return_data_),
  0,
  ~0u,
  3,
  4,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputBinType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputBinType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputBinType, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOutputBinType, script_pubkey_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, bin_outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, lock_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, inputs_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, outputs_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, extra_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransactionType, extra_data_len_),
  1,
  ~0u,
  ~0u,
  ~0u,
  2,
  3,
  4,
  0,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestDetailsType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestDetailsType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestDetailsType, request_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestDetailsType, tx_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestDetailsType, extra_data_len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestDetailsType, extra_data_offset_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestSerializedType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestSerializedType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestSerializedType, signature_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestSerializedType, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxRequestSerializedType, serialized_tx_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentityType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentityType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentityType, proto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentityType, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentityType, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentityType, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentityType, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentityType, index_),
  0,
  1,
  2,
  3,
  4,
  5,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 11, sizeof(HDNodeType)},
  { 17, 24, sizeof(HDNodePathType)},
  { 26, 40, sizeof(CoinType)},
  { 49, 57, sizeof(MultisigRedeemScriptType)},
  { 60, 73, sizeof(TxInputType)},
  { 81, 92, sizeof(TxOutputType)},
  { 98, 105, sizeof(TxOutputBinType)},
  { 107, 121, sizeof(TransactionType)},
  { 130, 139, sizeof(TxRequestDetailsType)},
  { 143, 151, sizeof(TxRequestSerializedType)},
  { 154, 165, sizeof(IdentityType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_HDNodeType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HDNodePathType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CoinType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MultisigRedeemScriptType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TxInputType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TxOutputType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TxOutputBinType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransactionType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TxRequestDetailsType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TxRequestSerializedType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdentityType_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "types.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

}  // namespace

void TableStruct::Shutdown() {
  _HDNodeType_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _HDNodePathType_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CoinType_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _MultisigRedeemScriptType_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _TxInputType_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _TxOutputType_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _TxOutputBinType_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _TransactionType_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _TxRequestDetailsType_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _TxRequestSerializedType_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _IdentityType_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::InitDefaults();
  _HDNodeType_default_instance_.DefaultConstruct();
  _HDNodePathType_default_instance_.DefaultConstruct();
  _CoinType_default_instance_.DefaultConstruct();
  _MultisigRedeemScriptType_default_instance_.DefaultConstruct();
  _TxInputType_default_instance_.DefaultConstruct();
  _TxOutputType_default_instance_.DefaultConstruct();
  _TxOutputBinType_default_instance_.DefaultConstruct();
  _TransactionType_default_instance_.DefaultConstruct();
  _TxRequestDetailsType_default_instance_.DefaultConstruct();
  _TxRequestSerializedType_default_instance_.DefaultConstruct();
  _IdentityType_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::EnumValueOptions::internal_default_instance(),
    50002, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::EnumValueOptions::internal_default_instance(),
    50003, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::EnumValueOptions::internal_default_instance(),
    50004, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::EnumValueOptions::internal_default_instance(),
    50005, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::EnumValueOptions::internal_default_instance(),
    50006, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::EnumValueOptions::internal_default_instance(),
    50007, 8, false, false);
  _HDNodePathType_default_instance_.get_mutable()->node_ = const_cast< ::TrezorProtobuf::HDNodeType*>(
      ::TrezorProtobuf::HDNodeType::internal_default_instance());
  _TxInputType_default_instance_.get_mutable()->multisig_ = const_cast< ::TrezorProtobuf::MultisigRedeemScriptType*>(
      ::TrezorProtobuf::MultisigRedeemScriptType::internal_default_instance());
  _TxOutputType_default_instance_.get_mutable()->multisig_ = const_cast< ::TrezorProtobuf::MultisigRedeemScriptType*>(
      ::TrezorProtobuf::MultisigRedeemScriptType::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013types.proto\022\016TrezorProtobuf\032 google/pr"
      "otobuf/descriptor.proto\"\200\001\n\nHDNodeType\022\r"
      "\n\005depth\030\001 \002(\r\022\023\n\013fingerprint\030\002 \002(\r\022\021\n\tch"
      "ild_num\030\003 \002(\r\022\022\n\nchain_code\030\004 \002(\014\022\023\n\013pri"
      "vate_key\030\005 \001(\014\022\022\n\npublic_key\030\006 \001(\014\"M\n\016HD"
      "NodePathType\022(\n\004node\030\001 \002(\0132\032.TrezorProto"
      "buf.HDNodeType\022\021\n\taddress_n\030\002 \003(\r\"\351\001\n\010Co"
      "inType\022\021\n\tcoin_name\030\001 \001(\t\022\025\n\rcoin_shortc"
      "ut\030\002 \001(\t\022\027\n\014address_type\030\003 \001(\r:\0010\022\021\n\tmax"
      "fee_kb\030\004 \001(\004\022\034\n\021address_type_p2sh\030\005 \001(\r:"
      "\0015\022\035\n\025signed_message_header\030\010 \001(\t\022\034\n\nxpu"
      "b_magic\030\t \001(\r:\01076067358\022\034\n\nxprv_magic\030\n "
      "\001(\r:\01076066276\022\016\n\006segwit\030\013 \001(\010\"j\n\030Multisi"
      "gRedeemScriptType\022/\n\007pubkeys\030\001 \003(\0132\036.Tre"
      "zorProtobuf.HDNodePathType\022\022\n\nsignatures"
      "\030\002 \003(\014\022\t\n\001m\030\003 \001(\r\"\211\002\n\013TxInputType\022\021\n\tadd"
      "ress_n\030\001 \003(\r\022\021\n\tprev_hash\030\002 \002(\014\022\022\n\nprev_"
      "index\030\003 \002(\r\022\022\n\nscript_sig\030\004 \001(\014\022\034\n\010seque"
      "nce\030\005 \001(\r:\n4294967295\022B\n\013script_type\030\006 \001"
      "(\0162\037.TrezorProtobuf.InputScriptType:\014SPE"
      "NDADDRESS\022:\n\010multisig\030\007 \001(\0132(.TrezorProt"
      "obuf.MultisigRedeemScriptType\022\016\n\006amount\030"
      "\010 \001(\004\"\315\001\n\014TxOutputType\022\017\n\007address\030\001 \001(\t\022"
      "\021\n\taddress_n\030\002 \003(\r\022\016\n\006amount\030\003 \002(\004\0225\n\013sc"
      "ript_type\030\004 \002(\0162 .TrezorProtobuf.OutputS"
      "criptType\022:\n\010multisig\030\005 \001(\0132(.TrezorProt"
      "obuf.MultisigRedeemScriptType\022\026\n\016op_retu"
      "rn_data\030\006 \001(\014\"8\n\017TxOutputBinType\022\016\n\006amou"
      "nt\030\001 \002(\004\022\025\n\rscript_pubkey\030\002 \002(\014\"\234\002\n\017Tran"
      "sactionType\022\017\n\007version\030\001 \001(\r\022+\n\006inputs\030\002"
      " \003(\0132\033.TrezorProtobuf.TxInputType\0224\n\013bin"
      "_outputs\030\003 \003(\0132\037.TrezorProtobuf.TxOutput"
      "BinType\022-\n\007outputs\030\005 \003(\0132\034.TrezorProtobu"
      "f.TxOutputType\022\021\n\tlock_time\030\004 \001(\r\022\022\n\ninp"
      "uts_cnt\030\006 \001(\r\022\023\n\013outputs_cnt\030\007 \001(\r\022\022\n\nex"
      "tra_data\030\010 \001(\014\022\026\n\016extra_data_len\030\t \001(\r\"q"
      "\n\024TxRequestDetailsType\022\025\n\rrequest_index\030"
      "\001 \001(\r\022\017\n\007tx_hash\030\002 \001(\014\022\026\n\016extra_data_len"
      "\030\003 \001(\r\022\031\n\021extra_data_offset\030\004 \001(\r\"\\\n\027TxR"
      "equestSerializedType\022\027\n\017signature_index\030"
      "\001 \001(\r\022\021\n\tsignature\030\002 \001(\014\022\025\n\rserialized_t"
      "x\030\003 \001(\014\"g\n\014IdentityType\022\r\n\005proto\030\001 \001(\t\022\014"
      "\n\004user\030\002 \001(\t\022\014\n\004host\030\003 \001(\t\022\014\n\004port\030\004 \001(\t"
      "\022\014\n\004path\030\005 \001(\t\022\020\n\005index\030\006 \001(\r:\0010*\315\002\n\013Fai"
      "lureType\022\035\n\031Failure_UnexpectedMessage\020\001\022"
      "\032\n\026Failure_ButtonExpected\020\002\022\027\n\023Failure_S"
      "yntaxError\020\003\022\033\n\027Failure_ActionCancelled\020"
      "\004\022\027\n\023Failure_PinExpected\020\005\022\030\n\024Failure_Pi"
      "nCancelled\020\006\022\026\n\022Failure_PinInvalid\020\007\022\034\n\030"
      "Failure_InvalidSignature\020\010\022\021\n\rFailure_Ot"
      "her\020\t\022\032\n\026Failure_NotEnoughFunds\020\n\022\032\n\026Fai"
      "lure_NotInitialized\020\013\022\031\n\025Failure_Firmwar"
      "eError\020c*\207\001\n\020OutputScriptType\022\020\n\014PAYTOAD"
      "DRESS\020\000\022\023\n\017PAYTOSCRIPTHASH\020\001\022\021\n\rPAYTOMUL"
      "TISIG\020\002\022\021\n\rPAYTOOPRETURN\020\003\022\020\n\014PAYTOWITNE"
      "SS\020\004\022\024\n\020PAYTOP2SHWITNESS\020\005*l\n\017InputScrip"
      "tType\022\020\n\014SPENDADDRESS\020\000\022\021\n\rSPENDMULTISIG"
      "\020\001\022\014\n\010EXTERNAL\020\002\022\020\n\014SPENDWITNESS\020\003\022\024\n\020SP"
      "ENDP2SHWITNESS\020\004*U\n\013RequestType\022\013\n\007TXINP"
      "UT\020\000\022\014\n\010TXOUTPUT\020\001\022\n\n\006TXMETA\020\002\022\016\n\nTXFINI"
      "SHED\020\003\022\017\n\013TXEXTRADATA\020\004*\337\002\n\021ButtonReques"
      "tType\022\027\n\023ButtonRequest_Other\020\001\022\"\n\036Button"
      "Request_FeeOverThreshold\020\002\022\037\n\033ButtonRequ"
      "est_ConfirmOutput\020\003\022\035\n\031ButtonRequest_Res"
      "etDevice\020\004\022\035\n\031ButtonRequest_ConfirmWord\020"
      "\005\022\034\n\030ButtonRequest_WipeDevice\020\006\022\035\n\031Butto"
      "nRequest_ProtectCall\020\007\022\030\n\024ButtonRequest_"
      "SignTx\020\010\022\037\n\033ButtonRequest_FirmwareCheck\020"
      "\t\022\031\n\025ButtonRequest_Address\020\n\022\033\n\027ButtonRe"
      "quest_PublicKey\020\013*\177\n\024PinMatrixRequestTyp"
      "e\022 \n\034PinMatrixRequestType_Current\020\001\022!\n\035P"
      "inMatrixRequestType_NewFirst\020\002\022\"\n\036PinMat"
      "rixRequestType_NewSecond\020\003*Z\n\022RecoveryDe"
      "viceType\022%\n!RecoveryDeviceType_Scrambled"
      "Words\020\000\022\035\n\031RecoveryDeviceType_Matrix\020\001*f"
      "\n\017WordRequestType\022\031\n\025WordRequestType_Pla"
      "in\020\000\022\033\n\027WordRequestType_Matrix9\020\001\022\033\n\027Wor"
      "dRequestType_Matrix6\020\002:4\n\007wire_in\022!.goog"
      "le.protobuf.EnumValueOptions\030\322\206\003 \001(\010:5\n\010"
      "wire_out\022!.google.protobuf.EnumValueOpti"
      "ons\030\323\206\003 \001(\010::\n\rwire_debug_in\022!.google.pr"
      "otobuf.EnumValueOptions\030\324\206\003 \001(\010:;\n\016wire_"
      "debug_out\022!.google.protobuf.EnumValueOpt"
      "ions\030\325\206\003 \001(\010:6\n\twire_tiny\022!.google.proto"
      "buf.EnumValueOptions\030\326\206\003 \001(\010:<\n\017wire_boo"
      "tloader\022!.google.protobuf.EnumValueOptio"
      "ns\030\327\206\003 \001(\010B-\n\037com.satoshilabs.trezor.pro"
      "tobufB\nTrezorType"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3497);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "types.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_types_2eproto

const ::google::protobuf::EnumDescriptor* FailureType_descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_enum_descriptors[0];
}
bool FailureType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 99:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OutputScriptType_descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_enum_descriptors[1];
}
bool OutputScriptType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InputScriptType_descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_enum_descriptors[2];
}
bool InputScriptType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_enum_descriptors[3];
}
bool RequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ButtonRequestType_descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_enum_descriptors[4];
}
bool ButtonRequestType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PinMatrixRequestType_descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_enum_descriptors[5];
}
bool PinMatrixRequestType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RecoveryDeviceType_descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_enum_descriptors[6];
}
bool RecoveryDeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WordRequestType_descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_enum_descriptors[7];
}
bool WordRequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDNodeType::kDepthFieldNumber;
const int HDNodeType::kFingerprintFieldNumber;
const int HDNodeType::kChildNumFieldNumber;
const int HDNodeType::kChainCodeFieldNumber;
const int HDNodeType::kPrivateKeyFieldNumber;
const int HDNodeType::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDNodeType::HDNodeType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.HDNodeType)
}
HDNodeType::HDNodeType(const HDNodeType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chain_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chain_code()) {
    chain_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_code_);
  }
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_private_key()) {
    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  ::memcpy(&depth_, &from.depth_,
    reinterpret_cast<char*>(&child_num_) -
    reinterpret_cast<char*>(&depth_) + sizeof(child_num_));
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.HDNodeType)
}

void HDNodeType::SharedCtor() {
  _cached_size_ = 0;
  chain_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&depth_, 0, reinterpret_cast<char*>(&child_num_) -
    reinterpret_cast<char*>(&depth_) + sizeof(child_num_));
}

HDNodeType::~HDNodeType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.HDNodeType)
  SharedDtor();
}

void HDNodeType::SharedDtor() {
  chain_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HDNodeType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDNodeType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDNodeType& HDNodeType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

HDNodeType* HDNodeType::New(::google::protobuf::Arena* arena) const {
  HDNodeType* n = new HDNodeType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDNodeType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.HDNodeType)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_chain_code()) {
      GOOGLE_DCHECK(!chain_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chain_code_.UnsafeRawStringPointer())->clear();
    }
    if (has_private_key()) {
      GOOGLE_DCHECK(!private_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*private_key_.UnsafeRawStringPointer())->clear();
    }
    if (has_public_key()) {
      GOOGLE_DCHECK(!public_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*public_key_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&depth_, 0, reinterpret_cast<char*>(&child_num_) -
      reinterpret_cast<char*>(&depth_) + sizeof(child_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HDNodeType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.HDNodeType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 depth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_depth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 fingerprint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_fingerprint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fingerprint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 child_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_child_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &child_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes chain_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chain_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes private_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_private_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes public_key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.HDNodeType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.HDNodeType)
  return false;
#undef DO_
}

void HDNodeType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.HDNodeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 depth = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depth(), output);
  }

  // required uint32 fingerprint = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fingerprint(), output);
  }

  // required uint32 child_num = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->child_num(), output);
  }

  // required bytes chain_code = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->chain_code(), output);
  }

  // optional bytes private_key = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->private_key(), output);
  }

  // optional bytes public_key = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->public_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.HDNodeType)
}

::google::protobuf::uint8* HDNodeType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.HDNodeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 depth = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depth(), target);
  }

  // required uint32 fingerprint = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fingerprint(), target);
  }

  // required uint32 child_num = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->child_num(), target);
  }

  // required bytes chain_code = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->chain_code(), target);
  }

  // optional bytes private_key = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->private_key(), target);
  }

  // optional bytes public_key = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->public_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.HDNodeType)
  return target;
}

size_t HDNodeType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TrezorProtobuf.HDNodeType)
  size_t total_size = 0;

  if (has_chain_code()) {
    // required bytes chain_code = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chain_code());
  }

  if (has_depth()) {
    // required uint32 depth = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->depth());
  }

  if (has_fingerprint()) {
    // required uint32 fingerprint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fingerprint());
  }

  if (has_child_num()) {
    // required uint32 child_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->child_num());
  }

  return total_size;
}
size_t HDNodeType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.HDNodeType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000039) ^ 0x00000039) == 0) {  // All required fields are present.
    // required bytes chain_code = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chain_code());

    // required uint32 depth = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->depth());

    // required uint32 fingerprint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fingerprint());

    // required uint32 child_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->child_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional bytes private_key = 5;
    if (has_private_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->private_key());
    }

    // optional bytes public_key = 6;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDNodeType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.HDNodeType)
  GOOGLE_DCHECK_NE(&from, this);
  const HDNodeType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDNodeType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.HDNodeType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.HDNodeType)
    MergeFrom(*source);
  }
}

void HDNodeType::MergeFrom(const HDNodeType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.HDNodeType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chain_code();
      chain_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_private_key();
      private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_public_key();
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
    if (cached_has_bits & 0x00000008u) {
      depth_ = from.depth_;
    }
    if (cached_has_bits & 0x00000010u) {
      fingerprint_ = from.fingerprint_;
    }
    if (cached_has_bits & 0x00000020u) {
      child_num_ = from.child_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HDNodeType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.HDNodeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDNodeType::CopyFrom(const HDNodeType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.HDNodeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDNodeType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000039) != 0x00000039) return false;
  return true;
}

void HDNodeType::Swap(HDNodeType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDNodeType::InternalSwap(HDNodeType* other) {
  chain_code_.Swap(&other->chain_code_);
  private_key_.Swap(&other->private_key_);
  public_key_.Swap(&other->public_key_);
  std::swap(depth_, other->depth_);
  std::swap(fingerprint_, other->fingerprint_);
  std::swap(child_num_, other->child_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDNodeType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HDNodeType

// required uint32 depth = 1;
bool HDNodeType::has_depth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HDNodeType::set_has_depth() {
  _has_bits_[0] |= 0x00000008u;
}
void HDNodeType::clear_has_depth() {
  _has_bits_[0] &= ~0x00000008u;
}
void HDNodeType::clear_depth() {
  depth_ = 0u;
  clear_has_depth();
}
::google::protobuf::uint32 HDNodeType::depth() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.HDNodeType.depth)
  return depth_;
}
void HDNodeType::set_depth(::google::protobuf::uint32 value) {
  set_has_depth();
  depth_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.HDNodeType.depth)
}

// required uint32 fingerprint = 2;
bool HDNodeType::has_fingerprint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HDNodeType::set_has_fingerprint() {
  _has_bits_[0] |= 0x00000010u;
}
void HDNodeType::clear_has_fingerprint() {
  _has_bits_[0] &= ~0x00000010u;
}
void HDNodeType::clear_fingerprint() {
  fingerprint_ = 0u;
  clear_has_fingerprint();
}
::google::protobuf::uint32 HDNodeType::fingerprint() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.HDNodeType.fingerprint)
  return fingerprint_;
}
void HDNodeType::set_fingerprint(::google::protobuf::uint32 value) {
  set_has_fingerprint();
  fingerprint_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.HDNodeType.fingerprint)
}

// required uint32 child_num = 3;
bool HDNodeType::has_child_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void HDNodeType::set_has_child_num() {
  _has_bits_[0] |= 0x00000020u;
}
void HDNodeType::clear_has_child_num() {
  _has_bits_[0] &= ~0x00000020u;
}
void HDNodeType::clear_child_num() {
  child_num_ = 0u;
  clear_has_child_num();
}
::google::protobuf::uint32 HDNodeType::child_num() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.HDNodeType.child_num)
  return child_num_;
}
void HDNodeType::set_child_num(::google::protobuf::uint32 value) {
  set_has_child_num();
  child_num_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.HDNodeType.child_num)
}

// required bytes chain_code = 4;
bool HDNodeType::has_chain_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HDNodeType::set_has_chain_code() {
  _has_bits_[0] |= 0x00000001u;
}
void HDNodeType::clear_has_chain_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void HDNodeType::clear_chain_code() {
  chain_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chain_code();
}
const ::std::string& HDNodeType::chain_code() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.HDNodeType.chain_code)
  return chain_code_.GetNoArena();
}
void HDNodeType::set_chain_code(const ::std::string& value) {
  set_has_chain_code();
  chain_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.HDNodeType.chain_code)
}
#if LANG_CXX11
void HDNodeType::set_chain_code(::std::string&& value) {
  set_has_chain_code();
  chain_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.HDNodeType.chain_code)
}
#endif
void HDNodeType::set_chain_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chain_code();
  chain_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.HDNodeType.chain_code)
}
void HDNodeType::set_chain_code(const void* value, size_t size) {
  set_has_chain_code();
  chain_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.HDNodeType.chain_code)
}
::std::string* HDNodeType::mutable_chain_code() {
  set_has_chain_code();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.HDNodeType.chain_code)
  return chain_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HDNodeType::release_chain_code() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.HDNodeType.chain_code)
  clear_has_chain_code();
  return chain_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HDNodeType::set_allocated_chain_code(::std::string* chain_code) {
  if (chain_code != NULL) {
    set_has_chain_code();
  } else {
    clear_has_chain_code();
  }
  chain_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chain_code);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.HDNodeType.chain_code)
}

// optional bytes private_key = 5;
bool HDNodeType::has_private_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HDNodeType::set_has_private_key() {
  _has_bits_[0] |= 0x00000002u;
}
void HDNodeType::clear_has_private_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void HDNodeType::clear_private_key() {
  private_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_private_key();
}
const ::std::string& HDNodeType::private_key() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.HDNodeType.private_key)
  return private_key_.GetNoArena();
}
void HDNodeType::set_private_key(const ::std::string& value) {
  set_has_private_key();
  private_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.HDNodeType.private_key)
}
#if LANG_CXX11
void HDNodeType::set_private_key(::std::string&& value) {
  set_has_private_key();
  private_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.HDNodeType.private_key)
}
#endif
void HDNodeType::set_private_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_private_key();
  private_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.HDNodeType.private_key)
}
void HDNodeType::set_private_key(const void* value, size_t size) {
  set_has_private_key();
  private_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.HDNodeType.private_key)
}
::std::string* HDNodeType::mutable_private_key() {
  set_has_private_key();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.HDNodeType.private_key)
  return private_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HDNodeType::release_private_key() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.HDNodeType.private_key)
  clear_has_private_key();
  return private_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HDNodeType::set_allocated_private_key(::std::string* private_key) {
  if (private_key != NULL) {
    set_has_private_key();
  } else {
    clear_has_private_key();
  }
  private_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), private_key);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.HDNodeType.private_key)
}

// optional bytes public_key = 6;
bool HDNodeType::has_public_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HDNodeType::set_has_public_key() {
  _has_bits_[0] |= 0x00000004u;
}
void HDNodeType::clear_has_public_key() {
  _has_bits_[0] &= ~0x00000004u;
}
void HDNodeType::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_public_key();
}
const ::std::string& HDNodeType::public_key() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.HDNodeType.public_key)
  return public_key_.GetNoArena();
}
void HDNodeType::set_public_key(const ::std::string& value) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.HDNodeType.public_key)
}
#if LANG_CXX11
void HDNodeType::set_public_key(::std::string&& value) {
  set_has_public_key();
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.HDNodeType.public_key)
}
#endif
void HDNodeType::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.HDNodeType.public_key)
}
void HDNodeType::set_public_key(const void* value, size_t size) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.HDNodeType.public_key)
}
::std::string* HDNodeType::mutable_public_key() {
  set_has_public_key();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.HDNodeType.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HDNodeType::release_public_key() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.HDNodeType.public_key)
  clear_has_public_key();
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HDNodeType::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    set_has_public_key();
  } else {
    clear_has_public_key();
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.HDNodeType.public_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDNodePathType::kNodeFieldNumber;
const int HDNodePathType::kAddressNFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDNodePathType::HDNodePathType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.HDNodePathType)
}
HDNodePathType::HDNodePathType(const HDNodePathType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::TrezorProtobuf::HDNodeType(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.HDNodePathType)
}

void HDNodePathType::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
}

HDNodePathType::~HDNodePathType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.HDNodePathType)
  SharedDtor();
}

void HDNodePathType::SharedDtor() {
  if (this != internal_default_instance()) {
    delete node_;
  }
}

void HDNodePathType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDNodePathType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDNodePathType& HDNodePathType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

HDNodePathType* HDNodePathType::New(::google::protobuf::Arena* arena) const {
  HDNodePathType* n = new HDNodePathType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDNodePathType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.HDNodePathType)
  address_n_.Clear();
  if (has_node()) {
    GOOGLE_DCHECK(node_ != NULL);
    node_->::TrezorProtobuf::HDNodeType::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HDNodePathType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.HDNodePathType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .TrezorProtobuf.HDNodeType node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 address_n = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.HDNodePathType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.HDNodePathType)
  return false;
#undef DO_
}

void HDNodePathType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.HDNodePathType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .TrezorProtobuf.HDNodeType node = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->node_, output);
  }

  // repeated uint32 address_n = 2;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->address_n(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.HDNodePathType)
}

::google::protobuf::uint8* HDNodePathType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.HDNodePathType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .TrezorProtobuf.HDNodeType node = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->node_, deterministic, target);
  }

  // repeated uint32 address_n = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->address_n_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.HDNodePathType)
  return target;
}

size_t HDNodePathType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.HDNodePathType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .TrezorProtobuf.HDNodeType node = 1;
  if (has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }
  // repeated uint32 address_n = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDNodePathType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.HDNodePathType)
  GOOGLE_DCHECK_NE(&from, this);
  const HDNodePathType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDNodePathType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.HDNodePathType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.HDNodePathType)
    MergeFrom(*source);
  }
}

void HDNodePathType::MergeFrom(const HDNodePathType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.HDNodePathType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_node()) {
    mutable_node()->::TrezorProtobuf::HDNodeType::MergeFrom(from.node());
  }
}

void HDNodePathType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.HDNodePathType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDNodePathType::CopyFrom(const HDNodePathType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.HDNodePathType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDNodePathType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_node()) {
    if (!this->node_->IsInitialized()) return false;
  }
  return true;
}

void HDNodePathType::Swap(HDNodePathType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDNodePathType::InternalSwap(HDNodePathType* other) {
  address_n_.InternalSwap(&other->address_n_);
  std::swap(node_, other->node_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDNodePathType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HDNodePathType

// required .TrezorProtobuf.HDNodeType node = 1;
bool HDNodePathType::has_node() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HDNodePathType::set_has_node() {
  _has_bits_[0] |= 0x00000001u;
}
void HDNodePathType::clear_has_node() {
  _has_bits_[0] &= ~0x00000001u;
}
void HDNodePathType::clear_node() {
  if (node_ != NULL) node_->::TrezorProtobuf::HDNodeType::Clear();
  clear_has_node();
}
const ::TrezorProtobuf::HDNodeType& HDNodePathType::node() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.HDNodePathType.node)
  return node_ != NULL ? *node_
                         : *::TrezorProtobuf::HDNodeType::internal_default_instance();
}
::TrezorProtobuf::HDNodeType* HDNodePathType::mutable_node() {
  set_has_node();
  if (node_ == NULL) {
    node_ = new ::TrezorProtobuf::HDNodeType;
  }
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.HDNodePathType.node)
  return node_;
}
::TrezorProtobuf::HDNodeType* HDNodePathType::release_node() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.HDNodePathType.node)
  clear_has_node();
  ::TrezorProtobuf::HDNodeType* temp = node_;
  node_ = NULL;
  return temp;
}
void HDNodePathType::set_allocated_node(::TrezorProtobuf::HDNodeType* node) {
  delete node_;
  node_ = node;
  if (node) {
    set_has_node();
  } else {
    clear_has_node();
  }
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.HDNodePathType.node)
}

// repeated uint32 address_n = 2;
int HDNodePathType::address_n_size() const {
  return address_n_.size();
}
void HDNodePathType::clear_address_n() {
  address_n_.Clear();
}
::google::protobuf::uint32 HDNodePathType::address_n(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.HDNodePathType.address_n)
  return address_n_.Get(index);
}
void HDNodePathType::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.HDNodePathType.address_n)
}
void HDNodePathType::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:TrezorProtobuf.HDNodePathType.address_n)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HDNodePathType::address_n() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.HDNodePathType.address_n)
  return address_n_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HDNodePathType::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.HDNodePathType.address_n)
  return &address_n_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoinType::kCoinNameFieldNumber;
const int CoinType::kCoinShortcutFieldNumber;
const int CoinType::kAddressTypeFieldNumber;
const int CoinType::kMaxfeeKbFieldNumber;
const int CoinType::kAddressTypeP2ShFieldNumber;
const int CoinType::kSignedMessageHeaderFieldNumber;
const int CoinType::kXpubMagicFieldNumber;
const int CoinType::kXprvMagicFieldNumber;
const int CoinType::kSegwitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoinType::CoinType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.CoinType)
}
CoinType::CoinType(const CoinType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  coin_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_coin_name()) {
    coin_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coin_name_);
  }
  coin_shortcut_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_coin_shortcut()) {
    coin_shortcut_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coin_shortcut_);
  }
  signed_message_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signed_message_header()) {
    signed_message_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_message_header_);
  }
  ::memcpy(&maxfee_kb_, &from.maxfee_kb_,
    reinterpret_cast<char*>(&xpub_magic_) -
    reinterpret_cast<char*>(&maxfee_kb_) + sizeof(xpub_magic_));
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.CoinType)
}

void CoinType::SharedCtor() {
  _cached_size_ = 0;
  coin_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coin_shortcut_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_message_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxfee_kb_, 0, reinterpret_cast<char*>(&segwit_) -
    reinterpret_cast<char*>(&maxfee_kb_) + sizeof(segwit_));
  xprv_magic_ = 76066276u;
  address_type_p2sh_ = 5u;
  xpub_magic_ = 76067358u;
}

CoinType::~CoinType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.CoinType)
  SharedDtor();
}

void CoinType::SharedDtor() {
  coin_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coin_shortcut_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_message_header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CoinType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoinType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoinType& CoinType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

CoinType* CoinType::New(::google::protobuf::Arena* arena) const {
  CoinType* n = new CoinType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CoinType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.CoinType)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_coin_name()) {
      GOOGLE_DCHECK(!coin_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*coin_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_coin_shortcut()) {
      GOOGLE_DCHECK(!coin_shortcut_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*coin_shortcut_.UnsafeRawStringPointer())->clear();
    }
    if (has_signed_message_header()) {
      GOOGLE_DCHECK(!signed_message_header_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signed_message_header_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&maxfee_kb_, 0, reinterpret_cast<char*>(&segwit_) -
      reinterpret_cast<char*>(&maxfee_kb_) + sizeof(segwit_));
    xprv_magic_ = 76066276u;
    address_type_p2sh_ = 5u;
  }
  xpub_magic_ = 76067358u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CoinType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.CoinType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string coin_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coin_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->coin_name().data(), this->coin_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.CoinType.coin_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string coin_shortcut = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coin_shortcut()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->coin_shortcut().data(), this->coin_shortcut().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.CoinType.coin_shortcut");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 address_type = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_address_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &address_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 maxfee_kb = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_maxfee_kb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maxfee_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 address_type_p2sh = 5 [default = 5];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_address_type_p2sh();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &address_type_p2sh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string signed_message_header = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signed_message_header()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signed_message_header().data(), this->signed_message_header().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.CoinType.signed_message_header");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 xpub_magic = 9 [default = 76067358];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_xpub_magic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xpub_magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 xprv_magic = 10 [default = 76066276];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_xprv_magic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xprv_magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool segwit = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_segwit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &segwit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.CoinType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.CoinType)
  return false;
#undef DO_
}

void CoinType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.CoinType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string coin_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->coin_name().data(), this->coin_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.CoinType.coin_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->coin_name(), output);
  }

  // optional string coin_shortcut = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->coin_shortcut().data(), this->coin_shortcut().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.CoinType.coin_shortcut");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->coin_shortcut(), output);
  }

  // optional uint32 address_type = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->address_type(), output);
  }

  // optional uint64 maxfee_kb = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->maxfee_kb(), output);
  }

  // optional uint32 address_type_p2sh = 5 [default = 5];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->address_type_p2sh(), output);
  }

  // optional string signed_message_header = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signed_message_header().data(), this->signed_message_header().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.CoinType.signed_message_header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->signed_message_header(), output);
  }

  // optional uint32 xpub_magic = 9 [default = 76067358];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->xpub_magic(), output);
  }

  // optional uint32 xprv_magic = 10 [default = 76066276];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->xprv_magic(), output);
  }

  // optional bool segwit = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->segwit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.CoinType)
}

::google::protobuf::uint8* CoinType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.CoinType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string coin_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->coin_name().data(), this->coin_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.CoinType.coin_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->coin_name(), target);
  }

  // optional string coin_shortcut = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->coin_shortcut().data(), this->coin_shortcut().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.CoinType.coin_shortcut");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->coin_shortcut(), target);
  }

  // optional uint32 address_type = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->address_type(), target);
  }

  // optional uint64 maxfee_kb = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->maxfee_kb(), target);
  }

  // optional uint32 address_type_p2sh = 5 [default = 5];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->address_type_p2sh(), target);
  }

  // optional string signed_message_header = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signed_message_header().data(), this->signed_message_header().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.CoinType.signed_message_header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->signed_message_header(), target);
  }

  // optional uint32 xpub_magic = 9 [default = 76067358];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->xpub_magic(), target);
  }

  // optional uint32 xprv_magic = 10 [default = 76066276];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->xprv_magic(), target);
  }

  // optional bool segwit = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->segwit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.CoinType)
  return target;
}

size_t CoinType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.CoinType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string coin_name = 1;
    if (has_coin_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->coin_name());
    }

    // optional string coin_shortcut = 2;
    if (has_coin_shortcut()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->coin_shortcut());
    }

    // optional string signed_message_header = 8;
    if (has_signed_message_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signed_message_header());
    }

    // optional uint64 maxfee_kb = 4;
    if (has_maxfee_kb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->maxfee_kb());
    }

    // optional uint32 address_type = 3 [default = 0];
    if (has_address_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->address_type());
    }

    // optional bool segwit = 11;
    if (has_segwit()) {
      total_size += 1 + 1;
    }

    // optional uint32 xprv_magic = 10 [default = 76066276];
    if (has_xprv_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->xprv_magic());
    }

    // optional uint32 address_type_p2sh = 5 [default = 5];
    if (has_address_type_p2sh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->address_type_p2sh());
    }

  }
  // optional uint32 xpub_magic = 9 [default = 76067358];
  if (has_xpub_magic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xpub_magic());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoinType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.CoinType)
  GOOGLE_DCHECK_NE(&from, this);
  const CoinType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoinType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.CoinType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.CoinType)
    MergeFrom(*source);
  }
}

void CoinType::MergeFrom(const CoinType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.CoinType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_coin_name();
      coin_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coin_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_coin_shortcut();
      coin_shortcut_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coin_shortcut_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_signed_message_header();
      signed_message_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_message_header_);
    }
    if (cached_has_bits & 0x00000008u) {
      maxfee_kb_ = from.maxfee_kb_;
    }
    if (cached_has_bits & 0x00000010u) {
      address_type_ = from.address_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      segwit_ = from.segwit_;
    }
    if (cached_has_bits & 0x00000040u) {
      xprv_magic_ = from.xprv_magic_;
    }
    if (cached_has_bits & 0x00000080u) {
      address_type_p2sh_ = from.address_type_p2sh_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_xpub_magic(from.xpub_magic());
  }
}

void CoinType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.CoinType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoinType::CopyFrom(const CoinType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.CoinType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoinType::IsInitialized() const {
  return true;
}

void CoinType::Swap(CoinType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoinType::InternalSwap(CoinType* other) {
  coin_name_.Swap(&other->coin_name_);
  coin_shortcut_.Swap(&other->coin_shortcut_);
  signed_message_header_.Swap(&other->signed_message_header_);
  std::swap(maxfee_kb_, other->maxfee_kb_);
  std::swap(address_type_, other->address_type_);
  std::swap(segwit_, other->segwit_);
  std::swap(xprv_magic_, other->xprv_magic_);
  std::swap(address_type_p2sh_, other->address_type_p2sh_);
  std::swap(xpub_magic_, other->xpub_magic_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CoinType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CoinType

// optional string coin_name = 1;
bool CoinType::has_coin_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CoinType::set_has_coin_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CoinType::clear_has_coin_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CoinType::clear_coin_name() {
  coin_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_coin_name();
}
const ::std::string& CoinType::coin_name() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.coin_name)
  return coin_name_.GetNoArena();
}
void CoinType::set_coin_name(const ::std::string& value) {
  set_has_coin_name();
  coin_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.coin_name)
}
#if LANG_CXX11
void CoinType::set_coin_name(::std::string&& value) {
  set_has_coin_name();
  coin_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.CoinType.coin_name)
}
#endif
void CoinType::set_coin_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_coin_name();
  coin_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.CoinType.coin_name)
}
void CoinType::set_coin_name(const char* value, size_t size) {
  set_has_coin_name();
  coin_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.CoinType.coin_name)
}
::std::string* CoinType::mutable_coin_name() {
  set_has_coin_name();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.CoinType.coin_name)
  return coin_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CoinType::release_coin_name() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.CoinType.coin_name)
  clear_has_coin_name();
  return coin_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CoinType::set_allocated_coin_name(::std::string* coin_name) {
  if (coin_name != NULL) {
    set_has_coin_name();
  } else {
    clear_has_coin_name();
  }
  coin_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coin_name);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.CoinType.coin_name)
}

// optional string coin_shortcut = 2;
bool CoinType::has_coin_shortcut() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CoinType::set_has_coin_shortcut() {
  _has_bits_[0] |= 0x00000002u;
}
void CoinType::clear_has_coin_shortcut() {
  _has_bits_[0] &= ~0x00000002u;
}
void CoinType::clear_coin_shortcut() {
  coin_shortcut_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_coin_shortcut();
}
const ::std::string& CoinType::coin_shortcut() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.coin_shortcut)
  return coin_shortcut_.GetNoArena();
}
void CoinType::set_coin_shortcut(const ::std::string& value) {
  set_has_coin_shortcut();
  coin_shortcut_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.coin_shortcut)
}
#if LANG_CXX11
void CoinType::set_coin_shortcut(::std::string&& value) {
  set_has_coin_shortcut();
  coin_shortcut_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.CoinType.coin_shortcut)
}
#endif
void CoinType::set_coin_shortcut(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_coin_shortcut();
  coin_shortcut_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.CoinType.coin_shortcut)
}
void CoinType::set_coin_shortcut(const char* value, size_t size) {
  set_has_coin_shortcut();
  coin_shortcut_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.CoinType.coin_shortcut)
}
::std::string* CoinType::mutable_coin_shortcut() {
  set_has_coin_shortcut();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.CoinType.coin_shortcut)
  return coin_shortcut_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CoinType::release_coin_shortcut() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.CoinType.coin_shortcut)
  clear_has_coin_shortcut();
  return coin_shortcut_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CoinType::set_allocated_coin_shortcut(::std::string* coin_shortcut) {
  if (coin_shortcut != NULL) {
    set_has_coin_shortcut();
  } else {
    clear_has_coin_shortcut();
  }
  coin_shortcut_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coin_shortcut);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.CoinType.coin_shortcut)
}

// optional uint32 address_type = 3 [default = 0];
bool CoinType::has_address_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CoinType::set_has_address_type() {
  _has_bits_[0] |= 0x00000010u;
}
void CoinType::clear_has_address_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void CoinType::clear_address_type() {
  address_type_ = 0u;
  clear_has_address_type();
}
::google::protobuf::uint32 CoinType::address_type() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.address_type)
  return address_type_;
}
void CoinType::set_address_type(::google::protobuf::uint32 value) {
  set_has_address_type();
  address_type_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.address_type)
}

// optional uint64 maxfee_kb = 4;
bool CoinType::has_maxfee_kb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CoinType::set_has_maxfee_kb() {
  _has_bits_[0] |= 0x00000008u;
}
void CoinType::clear_has_maxfee_kb() {
  _has_bits_[0] &= ~0x00000008u;
}
void CoinType::clear_maxfee_kb() {
  maxfee_kb_ = GOOGLE_ULONGLONG(0);
  clear_has_maxfee_kb();
}
::google::protobuf::uint64 CoinType::maxfee_kb() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.maxfee_kb)
  return maxfee_kb_;
}
void CoinType::set_maxfee_kb(::google::protobuf::uint64 value) {
  set_has_maxfee_kb();
  maxfee_kb_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.maxfee_kb)
}

// optional uint32 address_type_p2sh = 5 [default = 5];
bool CoinType::has_address_type_p2sh() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CoinType::set_has_address_type_p2sh() {
  _has_bits_[0] |= 0x00000080u;
}
void CoinType::clear_has_address_type_p2sh() {
  _has_bits_[0] &= ~0x00000080u;
}
void CoinType::clear_address_type_p2sh() {
  address_type_p2sh_ = 5u;
  clear_has_address_type_p2sh();
}
::google::protobuf::uint32 CoinType::address_type_p2sh() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.address_type_p2sh)
  return address_type_p2sh_;
}
void CoinType::set_address_type_p2sh(::google::protobuf::uint32 value) {
  set_has_address_type_p2sh();
  address_type_p2sh_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.address_type_p2sh)
}

// optional string signed_message_header = 8;
bool CoinType::has_signed_message_header() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CoinType::set_has_signed_message_header() {
  _has_bits_[0] |= 0x00000004u;
}
void CoinType::clear_has_signed_message_header() {
  _has_bits_[0] &= ~0x00000004u;
}
void CoinType::clear_signed_message_header() {
  signed_message_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signed_message_header();
}
const ::std::string& CoinType::signed_message_header() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.signed_message_header)
  return signed_message_header_.GetNoArena();
}
void CoinType::set_signed_message_header(const ::std::string& value) {
  set_has_signed_message_header();
  signed_message_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.signed_message_header)
}
#if LANG_CXX11
void CoinType::set_signed_message_header(::std::string&& value) {
  set_has_signed_message_header();
  signed_message_header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.CoinType.signed_message_header)
}
#endif
void CoinType::set_signed_message_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signed_message_header();
  signed_message_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.CoinType.signed_message_header)
}
void CoinType::set_signed_message_header(const char* value, size_t size) {
  set_has_signed_message_header();
  signed_message_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.CoinType.signed_message_header)
}
::std::string* CoinType::mutable_signed_message_header() {
  set_has_signed_message_header();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.CoinType.signed_message_header)
  return signed_message_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CoinType::release_signed_message_header() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.CoinType.signed_message_header)
  clear_has_signed_message_header();
  return signed_message_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CoinType::set_allocated_signed_message_header(::std::string* signed_message_header) {
  if (signed_message_header != NULL) {
    set_has_signed_message_header();
  } else {
    clear_has_signed_message_header();
  }
  signed_message_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signed_message_header);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.CoinType.signed_message_header)
}

// optional uint32 xpub_magic = 9 [default = 76067358];
bool CoinType::has_xpub_magic() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CoinType::set_has_xpub_magic() {
  _has_bits_[0] |= 0x00000100u;
}
void CoinType::clear_has_xpub_magic() {
  _has_bits_[0] &= ~0x00000100u;
}
void CoinType::clear_xpub_magic() {
  xpub_magic_ = 76067358u;
  clear_has_xpub_magic();
}
::google::protobuf::uint32 CoinType::xpub_magic() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.xpub_magic)
  return xpub_magic_;
}
void CoinType::set_xpub_magic(::google::protobuf::uint32 value) {
  set_has_xpub_magic();
  xpub_magic_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.xpub_magic)
}

// optional uint32 xprv_magic = 10 [default = 76066276];
bool CoinType::has_xprv_magic() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CoinType::set_has_xprv_magic() {
  _has_bits_[0] |= 0x00000040u;
}
void CoinType::clear_has_xprv_magic() {
  _has_bits_[0] &= ~0x00000040u;
}
void CoinType::clear_xprv_magic() {
  xprv_magic_ = 76066276u;
  clear_has_xprv_magic();
}
::google::protobuf::uint32 CoinType::xprv_magic() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.xprv_magic)
  return xprv_magic_;
}
void CoinType::set_xprv_magic(::google::protobuf::uint32 value) {
  set_has_xprv_magic();
  xprv_magic_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.xprv_magic)
}

// optional bool segwit = 11;
bool CoinType::has_segwit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CoinType::set_has_segwit() {
  _has_bits_[0] |= 0x00000020u;
}
void CoinType::clear_has_segwit() {
  _has_bits_[0] &= ~0x00000020u;
}
void CoinType::clear_segwit() {
  segwit_ = false;
  clear_has_segwit();
}
bool CoinType::segwit() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.CoinType.segwit)
  return segwit_;
}
void CoinType::set_segwit(bool value) {
  set_has_segwit();
  segwit_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.CoinType.segwit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultisigRedeemScriptType::kPubkeysFieldNumber;
const int MultisigRedeemScriptType::kSignaturesFieldNumber;
const int MultisigRedeemScriptType::kMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultisigRedeemScriptType::MultisigRedeemScriptType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.MultisigRedeemScriptType)
}
MultisigRedeemScriptType::MultisigRedeemScriptType(const MultisigRedeemScriptType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pubkeys_(from.pubkeys_),
      signatures_(from.signatures_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  m_ = from.m_;
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.MultisigRedeemScriptType)
}

void MultisigRedeemScriptType::SharedCtor() {
  _cached_size_ = 0;
  m_ = 0u;
}

MultisigRedeemScriptType::~MultisigRedeemScriptType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.MultisigRedeemScriptType)
  SharedDtor();
}

void MultisigRedeemScriptType::SharedDtor() {
}

void MultisigRedeemScriptType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultisigRedeemScriptType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultisigRedeemScriptType& MultisigRedeemScriptType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

MultisigRedeemScriptType* MultisigRedeemScriptType::New(::google::protobuf::Arena* arena) const {
  MultisigRedeemScriptType* n = new MultisigRedeemScriptType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MultisigRedeemScriptType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.MultisigRedeemScriptType)
  pubkeys_.Clear();
  signatures_.Clear();
  m_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MultisigRedeemScriptType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.MultisigRedeemScriptType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TrezorProtobuf.HDNodePathType pubkeys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pubkeys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes signatures = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_signatures()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 m = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.MultisigRedeemScriptType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.MultisigRedeemScriptType)
  return false;
#undef DO_
}

void MultisigRedeemScriptType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.MultisigRedeemScriptType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TrezorProtobuf.HDNodePathType pubkeys = 1;
  for (unsigned int i = 0, n = this->pubkeys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pubkeys(i), output);
  }

  // repeated bytes signatures = 2;
  for (int i = 0, n = this->signatures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->signatures(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 m = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.MultisigRedeemScriptType)
}

::google::protobuf::uint8* MultisigRedeemScriptType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.MultisigRedeemScriptType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TrezorProtobuf.HDNodePathType pubkeys = 1;
  for (unsigned int i = 0, n = this->pubkeys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pubkeys(i), deterministic, target);
  }

  // repeated bytes signatures = 2;
  for (int i = 0, n = this->signatures_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->signatures(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 m = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.MultisigRedeemScriptType)
  return target;
}

size_t MultisigRedeemScriptType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.MultisigRedeemScriptType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .TrezorProtobuf.HDNodePathType pubkeys = 1;
  {
    unsigned int count = this->pubkeys_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pubkeys(i));
    }
  }

  // repeated bytes signatures = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->signatures_size());
  for (int i = 0, n = this->signatures_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->signatures(i));
  }

  // optional uint32 m = 3;
  if (has_m()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultisigRedeemScriptType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.MultisigRedeemScriptType)
  GOOGLE_DCHECK_NE(&from, this);
  const MultisigRedeemScriptType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultisigRedeemScriptType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.MultisigRedeemScriptType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.MultisigRedeemScriptType)
    MergeFrom(*source);
  }
}

void MultisigRedeemScriptType::MergeFrom(const MultisigRedeemScriptType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.MultisigRedeemScriptType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pubkeys_.MergeFrom(from.pubkeys_);
  signatures_.MergeFrom(from.signatures_);
  if (from.has_m()) {
    set_m(from.m());
  }
}

void MultisigRedeemScriptType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.MultisigRedeemScriptType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultisigRedeemScriptType::CopyFrom(const MultisigRedeemScriptType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.MultisigRedeemScriptType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultisigRedeemScriptType::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->pubkeys())) return false;
  return true;
}

void MultisigRedeemScriptType::Swap(MultisigRedeemScriptType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultisigRedeemScriptType::InternalSwap(MultisigRedeemScriptType* other) {
  pubkeys_.InternalSwap(&other->pubkeys_);
  signatures_.InternalSwap(&other->signatures_);
  std::swap(m_, other->m_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultisigRedeemScriptType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MultisigRedeemScriptType

// repeated .TrezorProtobuf.HDNodePathType pubkeys = 1;
int MultisigRedeemScriptType::pubkeys_size() const {
  return pubkeys_.size();
}
void MultisigRedeemScriptType::clear_pubkeys() {
  pubkeys_.Clear();
}
const ::TrezorProtobuf::HDNodePathType& MultisigRedeemScriptType::pubkeys(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.MultisigRedeemScriptType.pubkeys)
  return pubkeys_.Get(index);
}
::TrezorProtobuf::HDNodePathType* MultisigRedeemScriptType::mutable_pubkeys(int index) {
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.MultisigRedeemScriptType.pubkeys)
  return pubkeys_.Mutable(index);
}
::TrezorProtobuf::HDNodePathType* MultisigRedeemScriptType::add_pubkeys() {
  // @@protoc_insertion_point(field_add:TrezorProtobuf.MultisigRedeemScriptType.pubkeys)
  return pubkeys_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::HDNodePathType >*
MultisigRedeemScriptType::mutable_pubkeys() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.MultisigRedeemScriptType.pubkeys)
  return &pubkeys_;
}
const ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::HDNodePathType >&
MultisigRedeemScriptType::pubkeys() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.MultisigRedeemScriptType.pubkeys)
  return pubkeys_;
}

// repeated bytes signatures = 2;
int MultisigRedeemScriptType::signatures_size() const {
  return signatures_.size();
}
void MultisigRedeemScriptType::clear_signatures() {
  signatures_.Clear();
}
const ::std::string& MultisigRedeemScriptType::signatures(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.MultisigRedeemScriptType.signatures)
  return signatures_.Get(index);
}
::std::string* MultisigRedeemScriptType::mutable_signatures(int index) {
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.MultisigRedeemScriptType.signatures)
  return signatures_.Mutable(index);
}
void MultisigRedeemScriptType::set_signatures(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TrezorProtobuf.MultisigRedeemScriptType.signatures)
  signatures_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MultisigRedeemScriptType::set_signatures(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:TrezorProtobuf.MultisigRedeemScriptType.signatures)
  signatures_.Mutable(index)->assign(std::move(value));
}
#endif
void MultisigRedeemScriptType::set_signatures(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  signatures_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.MultisigRedeemScriptType.signatures)
}
void MultisigRedeemScriptType::set_signatures(int index, const void* value, size_t size) {
  signatures_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.MultisigRedeemScriptType.signatures)
}
::std::string* MultisigRedeemScriptType::add_signatures() {
  // @@protoc_insertion_point(field_add_mutable:TrezorProtobuf.MultisigRedeemScriptType.signatures)
  return signatures_.Add();
}
void MultisigRedeemScriptType::add_signatures(const ::std::string& value) {
  signatures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TrezorProtobuf.MultisigRedeemScriptType.signatures)
}
#if LANG_CXX11
void MultisigRedeemScriptType::add_signatures(::std::string&& value) {
  signatures_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:TrezorProtobuf.MultisigRedeemScriptType.signatures)
}
#endif
void MultisigRedeemScriptType::add_signatures(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  signatures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TrezorProtobuf.MultisigRedeemScriptType.signatures)
}
void MultisigRedeemScriptType::add_signatures(const void* value, size_t size) {
  signatures_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TrezorProtobuf.MultisigRedeemScriptType.signatures)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MultisigRedeemScriptType::signatures() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.MultisigRedeemScriptType.signatures)
  return signatures_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MultisigRedeemScriptType::mutable_signatures() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.MultisigRedeemScriptType.signatures)
  return &signatures_;
}

// optional uint32 m = 3;
bool MultisigRedeemScriptType::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MultisigRedeemScriptType::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
void MultisigRedeemScriptType::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
void MultisigRedeemScriptType::clear_m() {
  m_ = 0u;
  clear_has_m();
}
::google::protobuf::uint32 MultisigRedeemScriptType::m() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.MultisigRedeemScriptType.m)
  return m_;
}
void MultisigRedeemScriptType::set_m(::google::protobuf::uint32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.MultisigRedeemScriptType.m)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxInputType::kAddressNFieldNumber;
const int TxInputType::kPrevHashFieldNumber;
const int TxInputType::kPrevIndexFieldNumber;
const int TxInputType::kScriptSigFieldNumber;
const int TxInputType::kSequenceFieldNumber;
const int TxInputType::kScriptTypeFieldNumber;
const int TxInputType::kMultisigFieldNumber;
const int TxInputType::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxInputType::TxInputType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.TxInputType)
}
TxInputType::TxInputType(const TxInputType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prev_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev_hash()) {
    prev_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_hash_);
  }
  script_sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_script_sig()) {
    script_sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_sig_);
  }
  if (from.has_multisig()) {
    multisig_ = new ::TrezorProtobuf::MultisigRedeemScriptType(*from.multisig_);
  } else {
    multisig_ = NULL;
  }
  ::memcpy(&prev_index_, &from.prev_index_,
    reinterpret_cast<char*>(&sequence_) -
    reinterpret_cast<char*>(&prev_index_) + sizeof(sequence_));
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.TxInputType)
}

void TxInputType::SharedCtor() {
  _cached_size_ = 0;
  prev_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&multisig_, 0, reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&multisig_) + sizeof(amount_));
  sequence_ = 4294967295u;
}

TxInputType::~TxInputType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.TxInputType)
  SharedDtor();
}

void TxInputType::SharedDtor() {
  prev_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_sig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete multisig_;
  }
}

void TxInputType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxInputType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxInputType& TxInputType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

TxInputType* TxInputType::New(::google::protobuf::Arena* arena) const {
  TxInputType* n = new TxInputType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxInputType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.TxInputType)
  address_n_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_prev_hash()) {
      GOOGLE_DCHECK(!prev_hash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_hash_.UnsafeRawStringPointer())->clear();
    }
    if (has_script_sig()) {
      GOOGLE_DCHECK(!script_sig_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*script_sig_.UnsafeRawStringPointer())->clear();
    }
    if (has_multisig()) {
      GOOGLE_DCHECK(multisig_ != NULL);
      multisig_->::TrezorProtobuf::MultisigRedeemScriptType::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 120u) {
    ::memset(&prev_index_, 0, reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&prev_index_) + sizeof(amount_));
    sequence_ = 4294967295u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxInputType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.TxInputType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes prev_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 prev_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_prev_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prev_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes script_sig = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_script_sig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sequence = 5 [default = 4294967295];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TrezorProtobuf.InputScriptType script_type = 6 [default = SPENDADDRESS];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TrezorProtobuf::InputScriptType_IsValid(value)) {
            set_script_type(static_cast< ::TrezorProtobuf::InputScriptType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_multisig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.TxInputType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.TxInputType)
  return false;
#undef DO_
}

void TxInputType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.TxInputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required bytes prev_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->prev_hash(), output);
  }

  // required uint32 prev_index = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prev_index(), output);
  }

  // optional bytes script_sig = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->script_sig(), output);
  }

  // optional uint32 sequence = 5 [default = 4294967295];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sequence(), output);
  }

  // optional .TrezorProtobuf.InputScriptType script_type = 6 [default = SPENDADDRESS];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->script_type(), output);
  }

  // optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->multisig_, output);
  }

  // optional uint64 amount = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.TxInputType)
}

::google::protobuf::uint8* TxInputType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.TxInputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // required bytes prev_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->prev_hash(), target);
  }

  // required uint32 prev_index = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prev_index(), target);
  }

  // optional bytes script_sig = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->script_sig(), target);
  }

  // optional uint32 sequence = 5 [default = 4294967295];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sequence(), target);
  }

  // optional .TrezorProtobuf.InputScriptType script_type = 6 [default = SPENDADDRESS];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->script_type(), target);
  }

  // optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->multisig_, deterministic, target);
  }

  // optional uint64 amount = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.TxInputType)
  return target;
}

size_t TxInputType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TrezorProtobuf.TxInputType)
  size_t total_size = 0;

  if (has_prev_hash()) {
    // required bytes prev_hash = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prev_hash());
  }

  if (has_prev_index()) {
    // required uint32 prev_index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prev_index());
  }

  return total_size;
}
size_t TxInputType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.TxInputType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required bytes prev_hash = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prev_hash());

    // required uint32 prev_index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prev_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional bytes script_sig = 4;
    if (has_script_sig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->script_sig());
    }

    // optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 7;
    if (has_multisig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->multisig_);
    }

  }
  if (_has_bits_[0 / 32] & 112u) {
    // optional .TrezorProtobuf.InputScriptType script_type = 6 [default = SPENDADDRESS];
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->script_type());
    }

    // optional uint64 amount = 8;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional uint32 sequence = 5 [default = 4294967295];
    if (has_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sequence());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxInputType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.TxInputType)
  GOOGLE_DCHECK_NE(&from, this);
  const TxInputType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxInputType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.TxInputType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.TxInputType)
    MergeFrom(*source);
  }
}

void TxInputType::MergeFrom(const TxInputType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.TxInputType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_prev_hash();
      prev_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_script_sig();
      script_sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_sig_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_multisig()->::TrezorProtobuf::MultisigRedeemScriptType::MergeFrom(from.multisig());
    }
    if (cached_has_bits & 0x00000008u) {
      prev_index_ = from.prev_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      script_type_ = from.script_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000040u) {
      sequence_ = from.sequence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxInputType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.TxInputType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxInputType::CopyFrom(const TxInputType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.TxInputType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxInputType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  if (has_multisig()) {
    if (!this->multisig_->IsInitialized()) return false;
  }
  return true;
}

void TxInputType::Swap(TxInputType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxInputType::InternalSwap(TxInputType* other) {
  address_n_.InternalSwap(&other->address_n_);
  prev_hash_.Swap(&other->prev_hash_);
  script_sig_.Swap(&other->script_sig_);
  std::swap(multisig_, other->multisig_);
  std::swap(prev_index_, other->prev_index_);
  std::swap(script_type_, other->script_type_);
  std::swap(amount_, other->amount_);
  std::swap(sequence_, other->sequence_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxInputType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxInputType

// repeated uint32 address_n = 1;
int TxInputType::address_n_size() const {
  return address_n_.size();
}
void TxInputType::clear_address_n() {
  address_n_.Clear();
}
::google::protobuf::uint32 TxInputType::address_n(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxInputType.address_n)
  return address_n_.Get(index);
}
void TxInputType::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxInputType.address_n)
}
void TxInputType::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:TrezorProtobuf.TxInputType.address_n)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TxInputType::address_n() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.TxInputType.address_n)
  return address_n_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TxInputType::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.TxInputType.address_n)
  return &address_n_;
}

// required bytes prev_hash = 2;
bool TxInputType::has_prev_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxInputType::set_has_prev_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void TxInputType::clear_has_prev_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxInputType::clear_prev_hash() {
  prev_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_prev_hash();
}
const ::std::string& TxInputType::prev_hash() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxInputType.prev_hash)
  return prev_hash_.GetNoArena();
}
void TxInputType::set_prev_hash(const ::std::string& value) {
  set_has_prev_hash();
  prev_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxInputType.prev_hash)
}
#if LANG_CXX11
void TxInputType::set_prev_hash(::std::string&& value) {
  set_has_prev_hash();
  prev_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TxInputType.prev_hash)
}
#endif
void TxInputType::set_prev_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_prev_hash();
  prev_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TxInputType.prev_hash)
}
void TxInputType::set_prev_hash(const void* value, size_t size) {
  set_has_prev_hash();
  prev_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TxInputType.prev_hash)
}
::std::string* TxInputType::mutable_prev_hash() {
  set_has_prev_hash();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxInputType.prev_hash)
  return prev_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxInputType::release_prev_hash() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxInputType.prev_hash)
  clear_has_prev_hash();
  return prev_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxInputType::set_allocated_prev_hash(::std::string* prev_hash) {
  if (prev_hash != NULL) {
    set_has_prev_hash();
  } else {
    clear_has_prev_hash();
  }
  prev_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_hash);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxInputType.prev_hash)
}

// required uint32 prev_index = 3;
bool TxInputType::has_prev_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TxInputType::set_has_prev_index() {
  _has_bits_[0] |= 0x00000008u;
}
void TxInputType::clear_has_prev_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void TxInputType::clear_prev_index() {
  prev_index_ = 0u;
  clear_has_prev_index();
}
::google::protobuf::uint32 TxInputType::prev_index() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxInputType.prev_index)
  return prev_index_;
}
void TxInputType::set_prev_index(::google::protobuf::uint32 value) {
  set_has_prev_index();
  prev_index_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxInputType.prev_index)
}

// optional bytes script_sig = 4;
bool TxInputType::has_script_sig() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxInputType::set_has_script_sig() {
  _has_bits_[0] |= 0x00000002u;
}
void TxInputType::clear_has_script_sig() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxInputType::clear_script_sig() {
  script_sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_script_sig();
}
const ::std::string& TxInputType::script_sig() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxInputType.script_sig)
  return script_sig_.GetNoArena();
}
void TxInputType::set_script_sig(const ::std::string& value) {
  set_has_script_sig();
  script_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxInputType.script_sig)
}
#if LANG_CXX11
void TxInputType::set_script_sig(::std::string&& value) {
  set_has_script_sig();
  script_sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TxInputType.script_sig)
}
#endif
void TxInputType::set_script_sig(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_script_sig();
  script_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TxInputType.script_sig)
}
void TxInputType::set_script_sig(const void* value, size_t size) {
  set_has_script_sig();
  script_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TxInputType.script_sig)
}
::std::string* TxInputType::mutable_script_sig() {
  set_has_script_sig();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxInputType.script_sig)
  return script_sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxInputType::release_script_sig() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxInputType.script_sig)
  clear_has_script_sig();
  return script_sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxInputType::set_allocated_script_sig(::std::string* script_sig) {
  if (script_sig != NULL) {
    set_has_script_sig();
  } else {
    clear_has_script_sig();
  }
  script_sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_sig);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxInputType.script_sig)
}

// optional uint32 sequence = 5 [default = 4294967295];
bool TxInputType::has_sequence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TxInputType::set_has_sequence() {
  _has_bits_[0] |= 0x00000040u;
}
void TxInputType::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000040u;
}
void TxInputType::clear_sequence() {
  sequence_ = 4294967295u;
  clear_has_sequence();
}
::google::protobuf::uint32 TxInputType::sequence() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxInputType.sequence)
  return sequence_;
}
void TxInputType::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxInputType.sequence)
}

// optional .TrezorProtobuf.InputScriptType script_type = 6 [default = SPENDADDRESS];
bool TxInputType::has_script_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TxInputType::set_has_script_type() {
  _has_bits_[0] |= 0x00000010u;
}
void TxInputType::clear_has_script_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void TxInputType::clear_script_type() {
  script_type_ = 0;
  clear_has_script_type();
}
::TrezorProtobuf::InputScriptType TxInputType::script_type() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxInputType.script_type)
  return static_cast< ::TrezorProtobuf::InputScriptType >(script_type_);
}
void TxInputType::set_script_type(::TrezorProtobuf::InputScriptType value) {
  assert(::TrezorProtobuf::InputScriptType_IsValid(value));
  set_has_script_type();
  script_type_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxInputType.script_type)
}

// optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 7;
bool TxInputType::has_multisig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TxInputType::set_has_multisig() {
  _has_bits_[0] |= 0x00000004u;
}
void TxInputType::clear_has_multisig() {
  _has_bits_[0] &= ~0x00000004u;
}
void TxInputType::clear_multisig() {
  if (multisig_ != NULL) multisig_->::TrezorProtobuf::MultisigRedeemScriptType::Clear();
  clear_has_multisig();
}
const ::TrezorProtobuf::MultisigRedeemScriptType& TxInputType::multisig() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxInputType.multisig)
  return multisig_ != NULL ? *multisig_
                         : *::TrezorProtobuf::MultisigRedeemScriptType::internal_default_instance();
}
::TrezorProtobuf::MultisigRedeemScriptType* TxInputType::mutable_multisig() {
  set_has_multisig();
  if (multisig_ == NULL) {
    multisig_ = new ::TrezorProtobuf::MultisigRedeemScriptType;
  }
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxInputType.multisig)
  return multisig_;
}
::TrezorProtobuf::MultisigRedeemScriptType* TxInputType::release_multisig() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxInputType.multisig)
  clear_has_multisig();
  ::TrezorProtobuf::MultisigRedeemScriptType* temp = multisig_;
  multisig_ = NULL;
  return temp;
}
void TxInputType::set_allocated_multisig(::TrezorProtobuf::MultisigRedeemScriptType* multisig) {
  delete multisig_;
  multisig_ = multisig;
  if (multisig) {
    set_has_multisig();
  } else {
    clear_has_multisig();
  }
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxInputType.multisig)
}

// optional uint64 amount = 8;
bool TxInputType::has_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TxInputType::set_has_amount() {
  _has_bits_[0] |= 0x00000020u;
}
void TxInputType::clear_has_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
void TxInputType::clear_amount() {
  amount_ = GOOGLE_ULONGLONG(0);
  clear_has_amount();
}
::google::protobuf::uint64 TxInputType::amount() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxInputType.amount)
  return amount_;
}
void TxInputType::set_amount(::google::protobuf::uint64 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxInputType.amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxOutputType::kAddressFieldNumber;
const int TxOutputType::kAddressNFieldNumber;
const int TxOutputType::kAmountFieldNumber;
const int TxOutputType::kScriptTypeFieldNumber;
const int TxOutputType::kMultisigFieldNumber;
const int TxOutputType::kOpReturnDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxOutputType::TxOutputType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.TxOutputType)
}
TxOutputType::TxOutputType(const TxOutputType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  op_return_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_op_return_data()) {
    op_return_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_return_data_);
  }
  if (from.has_multisig()) {
    multisig_ = new ::TrezorProtobuf::MultisigRedeemScriptType(*from.multisig_);
  } else {
    multisig_ = NULL;
  }
  ::memcpy(&amount_, &from.amount_,
    reinterpret_cast<char*>(&script_type_) -
    reinterpret_cast<char*>(&amount_) + sizeof(script_type_));
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.TxOutputType)
}

void TxOutputType::SharedCtor() {
  _cached_size_ = 0;
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_return_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&multisig_, 0, reinterpret_cast<char*>(&script_type_) -
    reinterpret_cast<char*>(&multisig_) + sizeof(script_type_));
}

TxOutputType::~TxOutputType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.TxOutputType)
  SharedDtor();
}

void TxOutputType::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_return_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete multisig_;
  }
}

void TxOutputType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxOutputType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxOutputType& TxOutputType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

TxOutputType* TxOutputType::New(::google::protobuf::Arena* arena) const {
  TxOutputType* n = new TxOutputType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxOutputType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.TxOutputType)
  address_n_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_address()) {
      GOOGLE_DCHECK(!address_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_.UnsafeRawStringPointer())->clear();
    }
    if (has_op_return_data()) {
      GOOGLE_DCHECK(!op_return_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*op_return_data_.UnsafeRawStringPointer())->clear();
    }
    if (has_multisig()) {
      GOOGLE_DCHECK(multisig_ != NULL);
      multisig_->::TrezorProtobuf::MultisigRedeemScriptType::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&amount_, 0, reinterpret_cast<char*>(&script_type_) -
      reinterpret_cast<char*>(&amount_) + sizeof(script_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxOutputType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.TxOutputType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.TxOutputType.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 address_n = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .TrezorProtobuf.OutputScriptType script_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TrezorProtobuf::OutputScriptType_IsValid(value)) {
            set_script_type(static_cast< ::TrezorProtobuf::OutputScriptType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_multisig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes op_return_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_op_return_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.TxOutputType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.TxOutputType)
  return false;
#undef DO_
}

void TxOutputType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.TxOutputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.TxOutputType.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // repeated uint32 address_n = 2;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->address_n(i), output);
  }

  // required uint64 amount = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->amount(), output);
  }

  // required .TrezorProtobuf.OutputScriptType script_type = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->script_type(), output);
  }

  // optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->multisig_, output);
  }

  // optional bytes op_return_data = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->op_return_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.TxOutputType)
}

::google::protobuf::uint8* TxOutputType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.TxOutputType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.TxOutputType.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // repeated uint32 address_n = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->address_n_, target);

  // required uint64 amount = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->amount(), target);
  }

  // required .TrezorProtobuf.OutputScriptType script_type = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->script_type(), target);
  }

  // optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->multisig_, deterministic, target);
  }

  // optional bytes op_return_data = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->op_return_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.TxOutputType)
  return target;
}

size_t TxOutputType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TrezorProtobuf.TxOutputType)
  size_t total_size = 0;

  if (has_amount()) {
    // required uint64 amount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());
  }

  if (has_script_type()) {
    // required .TrezorProtobuf.OutputScriptType script_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->script_type());
  }

  return total_size;
}
size_t TxOutputType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.TxOutputType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000018) ^ 0x00000018) == 0) {  // All required fields are present.
    // required uint64 amount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());

    // required .TrezorProtobuf.OutputScriptType script_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->script_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 address_n = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string address = 1;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional bytes op_return_data = 6;
    if (has_op_return_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->op_return_data());
    }

    // optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 5;
    if (has_multisig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->multisig_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxOutputType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.TxOutputType)
  GOOGLE_DCHECK_NE(&from, this);
  const TxOutputType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxOutputType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.TxOutputType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.TxOutputType)
    MergeFrom(*source);
  }
}

void TxOutputType::MergeFrom(const TxOutputType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.TxOutputType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_op_return_data();
      op_return_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_return_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_multisig()->::TrezorProtobuf::MultisigRedeemScriptType::MergeFrom(from.multisig());
    }
    if (cached_has_bits & 0x00000008u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000010u) {
      script_type_ = from.script_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxOutputType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.TxOutputType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxOutputType::CopyFrom(const TxOutputType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.TxOutputType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxOutputType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000018) != 0x00000018) return false;
  if (has_multisig()) {
    if (!this->multisig_->IsInitialized()) return false;
  }
  return true;
}

void TxOutputType::Swap(TxOutputType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxOutputType::InternalSwap(TxOutputType* other) {
  address_n_.InternalSwap(&other->address_n_);
  address_.Swap(&other->address_);
  op_return_data_.Swap(&other->op_return_data_);
  std::swap(multisig_, other->multisig_);
  std::swap(amount_, other->amount_);
  std::swap(script_type_, other->script_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxOutputType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxOutputType

// optional string address = 1;
bool TxOutputType::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxOutputType::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
void TxOutputType::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxOutputType::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
const ::std::string& TxOutputType::address() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxOutputType.address)
  return address_.GetNoArena();
}
void TxOutputType::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxOutputType.address)
}
#if LANG_CXX11
void TxOutputType::set_address(::std::string&& value) {
  set_has_address();
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TxOutputType.address)
}
#endif
void TxOutputType::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TxOutputType.address)
}
void TxOutputType::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TxOutputType.address)
}
::std::string* TxOutputType::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxOutputType.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxOutputType::release_address() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxOutputType.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxOutputType::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxOutputType.address)
}

// repeated uint32 address_n = 2;
int TxOutputType::address_n_size() const {
  return address_n_.size();
}
void TxOutputType::clear_address_n() {
  address_n_.Clear();
}
::google::protobuf::uint32 TxOutputType::address_n(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxOutputType.address_n)
  return address_n_.Get(index);
}
void TxOutputType::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxOutputType.address_n)
}
void TxOutputType::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:TrezorProtobuf.TxOutputType.address_n)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TxOutputType::address_n() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.TxOutputType.address_n)
  return address_n_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TxOutputType::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.TxOutputType.address_n)
  return &address_n_;
}

// required uint64 amount = 3;
bool TxOutputType::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TxOutputType::set_has_amount() {
  _has_bits_[0] |= 0x00000008u;
}
void TxOutputType::clear_has_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
void TxOutputType::clear_amount() {
  amount_ = GOOGLE_ULONGLONG(0);
  clear_has_amount();
}
::google::protobuf::uint64 TxOutputType::amount() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxOutputType.amount)
  return amount_;
}
void TxOutputType::set_amount(::google::protobuf::uint64 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxOutputType.amount)
}

// required .TrezorProtobuf.OutputScriptType script_type = 4;
bool TxOutputType::has_script_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TxOutputType::set_has_script_type() {
  _has_bits_[0] |= 0x00000010u;
}
void TxOutputType::clear_has_script_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void TxOutputType::clear_script_type() {
  script_type_ = 0;
  clear_has_script_type();
}
::TrezorProtobuf::OutputScriptType TxOutputType::script_type() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxOutputType.script_type)
  return static_cast< ::TrezorProtobuf::OutputScriptType >(script_type_);
}
void TxOutputType::set_script_type(::TrezorProtobuf::OutputScriptType value) {
  assert(::TrezorProtobuf::OutputScriptType_IsValid(value));
  set_has_script_type();
  script_type_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxOutputType.script_type)
}

// optional .TrezorProtobuf.MultisigRedeemScriptType multisig = 5;
bool TxOutputType::has_multisig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TxOutputType::set_has_multisig() {
  _has_bits_[0] |= 0x00000004u;
}
void TxOutputType::clear_has_multisig() {
  _has_bits_[0] &= ~0x00000004u;
}
void TxOutputType::clear_multisig() {
  if (multisig_ != NULL) multisig_->::TrezorProtobuf::MultisigRedeemScriptType::Clear();
  clear_has_multisig();
}
const ::TrezorProtobuf::MultisigRedeemScriptType& TxOutputType::multisig() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxOutputType.multisig)
  return multisig_ != NULL ? *multisig_
                         : *::TrezorProtobuf::MultisigRedeemScriptType::internal_default_instance();
}
::TrezorProtobuf::MultisigRedeemScriptType* TxOutputType::mutable_multisig() {
  set_has_multisig();
  if (multisig_ == NULL) {
    multisig_ = new ::TrezorProtobuf::MultisigRedeemScriptType;
  }
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxOutputType.multisig)
  return multisig_;
}
::TrezorProtobuf::MultisigRedeemScriptType* TxOutputType::release_multisig() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxOutputType.multisig)
  clear_has_multisig();
  ::TrezorProtobuf::MultisigRedeemScriptType* temp = multisig_;
  multisig_ = NULL;
  return temp;
}
void TxOutputType::set_allocated_multisig(::TrezorProtobuf::MultisigRedeemScriptType* multisig) {
  delete multisig_;
  multisig_ = multisig;
  if (multisig) {
    set_has_multisig();
  } else {
    clear_has_multisig();
  }
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxOutputType.multisig)
}

// optional bytes op_return_data = 6;
bool TxOutputType::has_op_return_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxOutputType::set_has_op_return_data() {
  _has_bits_[0] |= 0x00000002u;
}
void TxOutputType::clear_has_op_return_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxOutputType::clear_op_return_data() {
  op_return_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_return_data();
}
const ::std::string& TxOutputType::op_return_data() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxOutputType.op_return_data)
  return op_return_data_.GetNoArena();
}
void TxOutputType::set_op_return_data(const ::std::string& value) {
  set_has_op_return_data();
  op_return_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxOutputType.op_return_data)
}
#if LANG_CXX11
void TxOutputType::set_op_return_data(::std::string&& value) {
  set_has_op_return_data();
  op_return_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TxOutputType.op_return_data)
}
#endif
void TxOutputType::set_op_return_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_op_return_data();
  op_return_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TxOutputType.op_return_data)
}
void TxOutputType::set_op_return_data(const void* value, size_t size) {
  set_has_op_return_data();
  op_return_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TxOutputType.op_return_data)
}
::std::string* TxOutputType::mutable_op_return_data() {
  set_has_op_return_data();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxOutputType.op_return_data)
  return op_return_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxOutputType::release_op_return_data() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxOutputType.op_return_data)
  clear_has_op_return_data();
  return op_return_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxOutputType::set_allocated_op_return_data(::std::string* op_return_data) {
  if (op_return_data != NULL) {
    set_has_op_return_data();
  } else {
    clear_has_op_return_data();
  }
  op_return_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_return_data);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxOutputType.op_return_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxOutputBinType::kAmountFieldNumber;
const int TxOutputBinType::kScriptPubkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxOutputBinType::TxOutputBinType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.TxOutputBinType)
}
TxOutputBinType::TxOutputBinType(const TxOutputBinType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_script_pubkey()) {
    script_pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_pubkey_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.TxOutputBinType)
}

void TxOutputBinType::SharedCtor() {
  _cached_size_ = 0;
  script_pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_ULONGLONG(0);
}

TxOutputBinType::~TxOutputBinType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.TxOutputBinType)
  SharedDtor();
}

void TxOutputBinType::SharedDtor() {
  script_pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxOutputBinType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxOutputBinType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxOutputBinType& TxOutputBinType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

TxOutputBinType* TxOutputBinType::New(::google::protobuf::Arena* arena) const {
  TxOutputBinType* n = new TxOutputBinType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxOutputBinType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.TxOutputBinType)
  if (has_script_pubkey()) {
    GOOGLE_DCHECK(!script_pubkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*script_pubkey_.UnsafeRawStringPointer())->clear();
  }
  amount_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxOutputBinType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.TxOutputBinType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes script_pubkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_script_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.TxOutputBinType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.TxOutputBinType)
  return false;
#undef DO_
}

void TxOutputBinType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.TxOutputBinType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->amount(), output);
  }

  // required bytes script_pubkey = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->script_pubkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.TxOutputBinType)
}

::google::protobuf::uint8* TxOutputBinType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.TxOutputBinType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->amount(), target);
  }

  // required bytes script_pubkey = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->script_pubkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.TxOutputBinType)
  return target;
}

size_t TxOutputBinType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TrezorProtobuf.TxOutputBinType)
  size_t total_size = 0;

  if (has_script_pubkey()) {
    // required bytes script_pubkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->script_pubkey());
  }

  if (has_amount()) {
    // required uint64 amount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());
  }

  return total_size;
}
size_t TxOutputBinType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.TxOutputBinType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes script_pubkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->script_pubkey());

    // required uint64 amount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxOutputBinType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.TxOutputBinType)
  GOOGLE_DCHECK_NE(&from, this);
  const TxOutputBinType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxOutputBinType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.TxOutputBinType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.TxOutputBinType)
    MergeFrom(*source);
  }
}

void TxOutputBinType::MergeFrom(const TxOutputBinType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.TxOutputBinType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_script_pubkey();
      script_pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_pubkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxOutputBinType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.TxOutputBinType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxOutputBinType::CopyFrom(const TxOutputBinType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.TxOutputBinType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxOutputBinType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TxOutputBinType::Swap(TxOutputBinType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxOutputBinType::InternalSwap(TxOutputBinType* other) {
  script_pubkey_.Swap(&other->script_pubkey_);
  std::swap(amount_, other->amount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxOutputBinType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxOutputBinType

// required uint64 amount = 1;
bool TxOutputBinType::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxOutputBinType::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
void TxOutputBinType::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxOutputBinType::clear_amount() {
  amount_ = GOOGLE_ULONGLONG(0);
  clear_has_amount();
}
::google::protobuf::uint64 TxOutputBinType::amount() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxOutputBinType.amount)
  return amount_;
}
void TxOutputBinType::set_amount(::google::protobuf::uint64 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxOutputBinType.amount)
}

// required bytes script_pubkey = 2;
bool TxOutputBinType::has_script_pubkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxOutputBinType::set_has_script_pubkey() {
  _has_bits_[0] |= 0x00000001u;
}
void TxOutputBinType::clear_has_script_pubkey() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxOutputBinType::clear_script_pubkey() {
  script_pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_script_pubkey();
}
const ::std::string& TxOutputBinType::script_pubkey() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxOutputBinType.script_pubkey)
  return script_pubkey_.GetNoArena();
}
void TxOutputBinType::set_script_pubkey(const ::std::string& value) {
  set_has_script_pubkey();
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxOutputBinType.script_pubkey)
}
#if LANG_CXX11
void TxOutputBinType::set_script_pubkey(::std::string&& value) {
  set_has_script_pubkey();
  script_pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TxOutputBinType.script_pubkey)
}
#endif
void TxOutputBinType::set_script_pubkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_script_pubkey();
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TxOutputBinType.script_pubkey)
}
void TxOutputBinType::set_script_pubkey(const void* value, size_t size) {
  set_has_script_pubkey();
  script_pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TxOutputBinType.script_pubkey)
}
::std::string* TxOutputBinType::mutable_script_pubkey() {
  set_has_script_pubkey();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxOutputBinType.script_pubkey)
  return script_pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxOutputBinType::release_script_pubkey() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxOutputBinType.script_pubkey)
  clear_has_script_pubkey();
  return script_pubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxOutputBinType::set_allocated_script_pubkey(::std::string* script_pubkey) {
  if (script_pubkey != NULL) {
    set_has_script_pubkey();
  } else {
    clear_has_script_pubkey();
  }
  script_pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_pubkey);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxOutputBinType.script_pubkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionType::kVersionFieldNumber;
const int TransactionType::kInputsFieldNumber;
const int TransactionType::kBinOutputsFieldNumber;
const int TransactionType::kOutputsFieldNumber;
const int TransactionType::kLockTimeFieldNumber;
const int TransactionType::kInputsCntFieldNumber;
const int TransactionType::kOutputsCntFieldNumber;
const int TransactionType::kExtraDataFieldNumber;
const int TransactionType::kExtraDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionType::TransactionType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.TransactionType)
}
TransactionType::TransactionType(const TransactionType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      inputs_(from.inputs_),
      bin_outputs_(from.bin_outputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extra_data()) {
    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&extra_data_len_) -
    reinterpret_cast<char*>(&version_) + sizeof(extra_data_len_));
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.TransactionType)
}

void TransactionType::SharedCtor() {
  _cached_size_ = 0;
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, reinterpret_cast<char*>(&extra_data_len_) -
    reinterpret_cast<char*>(&version_) + sizeof(extra_data_len_));
}

TransactionType::~TransactionType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.TransactionType)
  SharedDtor();
}

void TransactionType::SharedDtor() {
  extra_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransactionType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionType& TransactionType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransactionType* TransactionType::New(::google::protobuf::Arena* arena) const {
  TransactionType* n = new TransactionType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.TransactionType)
  inputs_.Clear();
  bin_outputs_.Clear();
  outputs_.Clear();
  if (has_extra_data()) {
    GOOGLE_DCHECK(!extra_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*extra_data_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&extra_data_len_) -
      reinterpret_cast<char*>(&version_) + sizeof(extra_data_len_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransactionType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.TransactionType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TrezorProtobuf.TxInputType inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TrezorProtobuf.TxOutputBinType bin_outputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bin_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 lock_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_lock_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lock_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TrezorProtobuf.TxOutputType outputs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 inputs_cnt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_inputs_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inputs_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 outputs_cnt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_outputs_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outputs_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes extra_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 extra_data_len = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_extra_data_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extra_data_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.TransactionType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.TransactionType)
  return false;
#undef DO_
}

void TransactionType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.TransactionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // repeated .TrezorProtobuf.TxInputType inputs = 2;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->inputs(i), output);
  }

  // repeated .TrezorProtobuf.TxOutputBinType bin_outputs = 3;
  for (unsigned int i = 0, n = this->bin_outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bin_outputs(i), output);
  }

  // optional uint32 lock_time = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->lock_time(), output);
  }

  // repeated .TrezorProtobuf.TxOutputType outputs = 5;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->outputs(i), output);
  }

  // optional uint32 inputs_cnt = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->inputs_cnt(), output);
  }

  // optional uint32 outputs_cnt = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->outputs_cnt(), output);
  }

  // optional bytes extra_data = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->extra_data(), output);
  }

  // optional uint32 extra_data_len = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->extra_data_len(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.TransactionType)
}

::google::protobuf::uint8* TransactionType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.TransactionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // repeated .TrezorProtobuf.TxInputType inputs = 2;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->inputs(i), deterministic, target);
  }

  // repeated .TrezorProtobuf.TxOutputBinType bin_outputs = 3;
  for (unsigned int i = 0, n = this->bin_outputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->bin_outputs(i), deterministic, target);
  }

  // optional uint32 lock_time = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->lock_time(), target);
  }

  // repeated .TrezorProtobuf.TxOutputType outputs = 5;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->outputs(i), deterministic, target);
  }

  // optional uint32 inputs_cnt = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->inputs_cnt(), target);
  }

  // optional uint32 outputs_cnt = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->outputs_cnt(), target);
  }

  // optional bytes extra_data = 8;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->extra_data(), target);
  }

  // optional uint32 extra_data_len = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->extra_data_len(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.TransactionType)
  return target;
}

size_t TransactionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.TransactionType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .TrezorProtobuf.TxInputType inputs = 2;
  {
    unsigned int count = this->inputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputs(i));
    }
  }

  // repeated .TrezorProtobuf.TxOutputBinType bin_outputs = 3;
  {
    unsigned int count = this->bin_outputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bin_outputs(i));
    }
  }

  // repeated .TrezorProtobuf.TxOutputType outputs = 5;
  {
    unsigned int count = this->outputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outputs(i));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes extra_data = 8;
    if (has_extra_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->extra_data());
    }

    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 lock_time = 4;
    if (has_lock_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lock_time());
    }

    // optional uint32 inputs_cnt = 6;
    if (has_inputs_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inputs_cnt());
    }

    // optional uint32 outputs_cnt = 7;
    if (has_outputs_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->outputs_cnt());
    }

    // optional uint32 extra_data_len = 9;
    if (has_extra_data_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->extra_data_len());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.TransactionType)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.TransactionType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.TransactionType)
    MergeFrom(*source);
  }
}

void TransactionType::MergeFrom(const TransactionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.TransactionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  bin_outputs_.MergeFrom(from.bin_outputs_);
  outputs_.MergeFrom(from.outputs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_extra_data();
      extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000004u) {
      lock_time_ = from.lock_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      inputs_cnt_ = from.inputs_cnt_;
    }
    if (cached_has_bits & 0x00000010u) {
      outputs_cnt_ = from.outputs_cnt_;
    }
    if (cached_has_bits & 0x00000020u) {
      extra_data_len_ = from.extra_data_len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransactionType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.TransactionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionType::CopyFrom(const TransactionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.TransactionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionType::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->inputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->bin_outputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->outputs())) return false;
  return true;
}

void TransactionType::Swap(TransactionType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionType::InternalSwap(TransactionType* other) {
  inputs_.InternalSwap(&other->inputs_);
  bin_outputs_.InternalSwap(&other->bin_outputs_);
  outputs_.InternalSwap(&other->outputs_);
  extra_data_.Swap(&other->extra_data_);
  std::swap(version_, other->version_);
  std::swap(lock_time_, other->lock_time_);
  std::swap(inputs_cnt_, other->inputs_cnt_);
  std::swap(outputs_cnt_, other->outputs_cnt_);
  std::swap(extra_data_len_, other->extra_data_len_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransactionType

// optional uint32 version = 1;
bool TransactionType::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TransactionType::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void TransactionType::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void TransactionType::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 TransactionType::version() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.version)
  return version_;
}
void TransactionType::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TransactionType.version)
}

// repeated .TrezorProtobuf.TxInputType inputs = 2;
int TransactionType::inputs_size() const {
  return inputs_.size();
}
void TransactionType::clear_inputs() {
  inputs_.Clear();
}
const ::TrezorProtobuf::TxInputType& TransactionType::inputs(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.inputs)
  return inputs_.Get(index);
}
::TrezorProtobuf::TxInputType* TransactionType::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TransactionType.inputs)
  return inputs_.Mutable(index);
}
::TrezorProtobuf::TxInputType* TransactionType::add_inputs() {
  // @@protoc_insertion_point(field_add:TrezorProtobuf.TransactionType.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::TxInputType >*
TransactionType::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.TransactionType.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::TxInputType >&
TransactionType::inputs() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.TransactionType.inputs)
  return inputs_;
}

// repeated .TrezorProtobuf.TxOutputBinType bin_outputs = 3;
int TransactionType::bin_outputs_size() const {
  return bin_outputs_.size();
}
void TransactionType::clear_bin_outputs() {
  bin_outputs_.Clear();
}
const ::TrezorProtobuf::TxOutputBinType& TransactionType::bin_outputs(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.bin_outputs)
  return bin_outputs_.Get(index);
}
::TrezorProtobuf::TxOutputBinType* TransactionType::mutable_bin_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TransactionType.bin_outputs)
  return bin_outputs_.Mutable(index);
}
::TrezorProtobuf::TxOutputBinType* TransactionType::add_bin_outputs() {
  // @@protoc_insertion_point(field_add:TrezorProtobuf.TransactionType.bin_outputs)
  return bin_outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::TxOutputBinType >*
TransactionType::mutable_bin_outputs() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.TransactionType.bin_outputs)
  return &bin_outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::TxOutputBinType >&
TransactionType::bin_outputs() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.TransactionType.bin_outputs)
  return bin_outputs_;
}

// repeated .TrezorProtobuf.TxOutputType outputs = 5;
int TransactionType::outputs_size() const {
  return outputs_.size();
}
void TransactionType::clear_outputs() {
  outputs_.Clear();
}
const ::TrezorProtobuf::TxOutputType& TransactionType::outputs(int index) const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.outputs)
  return outputs_.Get(index);
}
::TrezorProtobuf::TxOutputType* TransactionType::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TransactionType.outputs)
  return outputs_.Mutable(index);
}
::TrezorProtobuf::TxOutputType* TransactionType::add_outputs() {
  // @@protoc_insertion_point(field_add:TrezorProtobuf.TransactionType.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::TxOutputType >*
TransactionType::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:TrezorProtobuf.TransactionType.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::TrezorProtobuf::TxOutputType >&
TransactionType::outputs() const {
  // @@protoc_insertion_point(field_list:TrezorProtobuf.TransactionType.outputs)
  return outputs_;
}

// optional uint32 lock_time = 4;
bool TransactionType::has_lock_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TransactionType::set_has_lock_time() {
  _has_bits_[0] |= 0x00000004u;
}
void TransactionType::clear_has_lock_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void TransactionType::clear_lock_time() {
  lock_time_ = 0u;
  clear_has_lock_time();
}
::google::protobuf::uint32 TransactionType::lock_time() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.lock_time)
  return lock_time_;
}
void TransactionType::set_lock_time(::google::protobuf::uint32 value) {
  set_has_lock_time();
  lock_time_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TransactionType.lock_time)
}

// optional uint32 inputs_cnt = 6;
bool TransactionType::has_inputs_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TransactionType::set_has_inputs_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
void TransactionType::clear_has_inputs_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
void TransactionType::clear_inputs_cnt() {
  inputs_cnt_ = 0u;
  clear_has_inputs_cnt();
}
::google::protobuf::uint32 TransactionType::inputs_cnt() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.inputs_cnt)
  return inputs_cnt_;
}
void TransactionType::set_inputs_cnt(::google::protobuf::uint32 value) {
  set_has_inputs_cnt();
  inputs_cnt_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TransactionType.inputs_cnt)
}

// optional uint32 outputs_cnt = 7;
bool TransactionType::has_outputs_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TransactionType::set_has_outputs_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
void TransactionType::clear_has_outputs_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
void TransactionType::clear_outputs_cnt() {
  outputs_cnt_ = 0u;
  clear_has_outputs_cnt();
}
::google::protobuf::uint32 TransactionType::outputs_cnt() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.outputs_cnt)
  return outputs_cnt_;
}
void TransactionType::set_outputs_cnt(::google::protobuf::uint32 value) {
  set_has_outputs_cnt();
  outputs_cnt_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TransactionType.outputs_cnt)
}

// optional bytes extra_data = 8;
bool TransactionType::has_extra_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TransactionType::set_has_extra_data() {
  _has_bits_[0] |= 0x00000001u;
}
void TransactionType::clear_has_extra_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void TransactionType::clear_extra_data() {
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extra_data();
}
const ::std::string& TransactionType::extra_data() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.extra_data)
  return extra_data_.GetNoArena();
}
void TransactionType::set_extra_data(const ::std::string& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TransactionType.extra_data)
}
#if LANG_CXX11
void TransactionType::set_extra_data(::std::string&& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TransactionType.extra_data)
}
#endif
void TransactionType::set_extra_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TransactionType.extra_data)
}
void TransactionType::set_extra_data(const void* value, size_t size) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TransactionType.extra_data)
}
::std::string* TransactionType::mutable_extra_data() {
  set_has_extra_data();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TransactionType.extra_data)
  return extra_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransactionType::release_extra_data() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TransactionType.extra_data)
  clear_has_extra_data();
  return extra_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransactionType::set_allocated_extra_data(::std::string* extra_data) {
  if (extra_data != NULL) {
    set_has_extra_data();
  } else {
    clear_has_extra_data();
  }
  extra_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_data);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TransactionType.extra_data)
}

// optional uint32 extra_data_len = 9;
bool TransactionType::has_extra_data_len() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TransactionType::set_has_extra_data_len() {
  _has_bits_[0] |= 0x00000020u;
}
void TransactionType::clear_has_extra_data_len() {
  _has_bits_[0] &= ~0x00000020u;
}
void TransactionType::clear_extra_data_len() {
  extra_data_len_ = 0u;
  clear_has_extra_data_len();
}
::google::protobuf::uint32 TransactionType::extra_data_len() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TransactionType.extra_data_len)
  return extra_data_len_;
}
void TransactionType::set_extra_data_len(::google::protobuf::uint32 value) {
  set_has_extra_data_len();
  extra_data_len_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TransactionType.extra_data_len)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxRequestDetailsType::kRequestIndexFieldNumber;
const int TxRequestDetailsType::kTxHashFieldNumber;
const int TxRequestDetailsType::kExtraDataLenFieldNumber;
const int TxRequestDetailsType::kExtraDataOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxRequestDetailsType::TxRequestDetailsType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.TxRequestDetailsType)
}
TxRequestDetailsType::TxRequestDetailsType(const TxRequestDetailsType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_hash()) {
    tx_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_hash_);
  }
  ::memcpy(&request_index_, &from.request_index_,
    reinterpret_cast<char*>(&extra_data_offset_) -
    reinterpret_cast<char*>(&request_index_) + sizeof(extra_data_offset_));
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.TxRequestDetailsType)
}

void TxRequestDetailsType::SharedCtor() {
  _cached_size_ = 0;
  tx_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_index_, 0, reinterpret_cast<char*>(&extra_data_offset_) -
    reinterpret_cast<char*>(&request_index_) + sizeof(extra_data_offset_));
}

TxRequestDetailsType::~TxRequestDetailsType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.TxRequestDetailsType)
  SharedDtor();
}

void TxRequestDetailsType::SharedDtor() {
  tx_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxRequestDetailsType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxRequestDetailsType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxRequestDetailsType& TxRequestDetailsType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

TxRequestDetailsType* TxRequestDetailsType::New(::google::protobuf::Arena* arena) const {
  TxRequestDetailsType* n = new TxRequestDetailsType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxRequestDetailsType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.TxRequestDetailsType)
  if (has_tx_hash()) {
    GOOGLE_DCHECK(!tx_hash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*tx_hash_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&request_index_, 0, reinterpret_cast<char*>(&extra_data_offset_) -
      reinterpret_cast<char*>(&request_index_) + sizeof(extra_data_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxRequestDetailsType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.TxRequestDetailsType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 request_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_request_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 extra_data_len = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_extra_data_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extra_data_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 extra_data_offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_extra_data_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extra_data_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.TxRequestDetailsType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.TxRequestDetailsType)
  return false;
#undef DO_
}

void TxRequestDetailsType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.TxRequestDetailsType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 request_index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->request_index(), output);
  }

  // optional bytes tx_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->tx_hash(), output);
  }

  // optional uint32 extra_data_len = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->extra_data_len(), output);
  }

  // optional uint32 extra_data_offset = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->extra_data_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.TxRequestDetailsType)
}

::google::protobuf::uint8* TxRequestDetailsType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.TxRequestDetailsType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 request_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->request_index(), target);
  }

  // optional bytes tx_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->tx_hash(), target);
  }

  // optional uint32 extra_data_len = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->extra_data_len(), target);
  }

  // optional uint32 extra_data_offset = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->extra_data_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.TxRequestDetailsType)
  return target;
}

size_t TxRequestDetailsType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.TxRequestDetailsType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes tx_hash = 2;
    if (has_tx_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_hash());
    }

    // optional uint32 request_index = 1;
    if (has_request_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->request_index());
    }

    // optional uint32 extra_data_len = 3;
    if (has_extra_data_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->extra_data_len());
    }

    // optional uint32 extra_data_offset = 4;
    if (has_extra_data_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->extra_data_offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxRequestDetailsType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.TxRequestDetailsType)
  GOOGLE_DCHECK_NE(&from, this);
  const TxRequestDetailsType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxRequestDetailsType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.TxRequestDetailsType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.TxRequestDetailsType)
    MergeFrom(*source);
  }
}

void TxRequestDetailsType::MergeFrom(const TxRequestDetailsType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.TxRequestDetailsType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tx_hash();
      tx_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      request_index_ = from.request_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      extra_data_len_ = from.extra_data_len_;
    }
    if (cached_has_bits & 0x00000008u) {
      extra_data_offset_ = from.extra_data_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxRequestDetailsType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.TxRequestDetailsType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxRequestDetailsType::CopyFrom(const TxRequestDetailsType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.TxRequestDetailsType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxRequestDetailsType::IsInitialized() const {
  return true;
}

void TxRequestDetailsType::Swap(TxRequestDetailsType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxRequestDetailsType::InternalSwap(TxRequestDetailsType* other) {
  tx_hash_.Swap(&other->tx_hash_);
  std::swap(request_index_, other->request_index_);
  std::swap(extra_data_len_, other->extra_data_len_);
  std::swap(extra_data_offset_, other->extra_data_offset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxRequestDetailsType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxRequestDetailsType

// optional uint32 request_index = 1;
bool TxRequestDetailsType::has_request_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxRequestDetailsType::set_has_request_index() {
  _has_bits_[0] |= 0x00000002u;
}
void TxRequestDetailsType::clear_has_request_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxRequestDetailsType::clear_request_index() {
  request_index_ = 0u;
  clear_has_request_index();
}
::google::protobuf::uint32 TxRequestDetailsType::request_index() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxRequestDetailsType.request_index)
  return request_index_;
}
void TxRequestDetailsType::set_request_index(::google::protobuf::uint32 value) {
  set_has_request_index();
  request_index_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxRequestDetailsType.request_index)
}

// optional bytes tx_hash = 2;
bool TxRequestDetailsType::has_tx_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxRequestDetailsType::set_has_tx_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void TxRequestDetailsType::clear_has_tx_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxRequestDetailsType::clear_tx_hash() {
  tx_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tx_hash();
}
const ::std::string& TxRequestDetailsType::tx_hash() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxRequestDetailsType.tx_hash)
  return tx_hash_.GetNoArena();
}
void TxRequestDetailsType::set_tx_hash(const ::std::string& value) {
  set_has_tx_hash();
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxRequestDetailsType.tx_hash)
}
#if LANG_CXX11
void TxRequestDetailsType::set_tx_hash(::std::string&& value) {
  set_has_tx_hash();
  tx_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TxRequestDetailsType.tx_hash)
}
#endif
void TxRequestDetailsType::set_tx_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tx_hash();
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TxRequestDetailsType.tx_hash)
}
void TxRequestDetailsType::set_tx_hash(const void* value, size_t size) {
  set_has_tx_hash();
  tx_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TxRequestDetailsType.tx_hash)
}
::std::string* TxRequestDetailsType::mutable_tx_hash() {
  set_has_tx_hash();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxRequestDetailsType.tx_hash)
  return tx_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxRequestDetailsType::release_tx_hash() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxRequestDetailsType.tx_hash)
  clear_has_tx_hash();
  return tx_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxRequestDetailsType::set_allocated_tx_hash(::std::string* tx_hash) {
  if (tx_hash != NULL) {
    set_has_tx_hash();
  } else {
    clear_has_tx_hash();
  }
  tx_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tx_hash);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxRequestDetailsType.tx_hash)
}

// optional uint32 extra_data_len = 3;
bool TxRequestDetailsType::has_extra_data_len() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TxRequestDetailsType::set_has_extra_data_len() {
  _has_bits_[0] |= 0x00000004u;
}
void TxRequestDetailsType::clear_has_extra_data_len() {
  _has_bits_[0] &= ~0x00000004u;
}
void TxRequestDetailsType::clear_extra_data_len() {
  extra_data_len_ = 0u;
  clear_has_extra_data_len();
}
::google::protobuf::uint32 TxRequestDetailsType::extra_data_len() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxRequestDetailsType.extra_data_len)
  return extra_data_len_;
}
void TxRequestDetailsType::set_extra_data_len(::google::protobuf::uint32 value) {
  set_has_extra_data_len();
  extra_data_len_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxRequestDetailsType.extra_data_len)
}

// optional uint32 extra_data_offset = 4;
bool TxRequestDetailsType::has_extra_data_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TxRequestDetailsType::set_has_extra_data_offset() {
  _has_bits_[0] |= 0x00000008u;
}
void TxRequestDetailsType::clear_has_extra_data_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
void TxRequestDetailsType::clear_extra_data_offset() {
  extra_data_offset_ = 0u;
  clear_has_extra_data_offset();
}
::google::protobuf::uint32 TxRequestDetailsType::extra_data_offset() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxRequestDetailsType.extra_data_offset)
  return extra_data_offset_;
}
void TxRequestDetailsType::set_extra_data_offset(::google::protobuf::uint32 value) {
  set_has_extra_data_offset();
  extra_data_offset_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxRequestDetailsType.extra_data_offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxRequestSerializedType::kSignatureIndexFieldNumber;
const int TxRequestSerializedType::kSignatureFieldNumber;
const int TxRequestSerializedType::kSerializedTxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxRequestSerializedType::TxRequestSerializedType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.TxRequestSerializedType)
}
TxRequestSerializedType::TxRequestSerializedType(const TxRequestSerializedType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  serialized_tx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_tx()) {
    serialized_tx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_tx_);
  }
  signature_index_ = from.signature_index_;
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.TxRequestSerializedType)
}

void TxRequestSerializedType::SharedCtor() {
  _cached_size_ = 0;
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_tx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_index_ = 0u;
}

TxRequestSerializedType::~TxRequestSerializedType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.TxRequestSerializedType)
  SharedDtor();
}

void TxRequestSerializedType::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_tx_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxRequestSerializedType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxRequestSerializedType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxRequestSerializedType& TxRequestSerializedType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

TxRequestSerializedType* TxRequestSerializedType::New(::google::protobuf::Arena* arena) const {
  TxRequestSerializedType* n = new TxRequestSerializedType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxRequestSerializedType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.TxRequestSerializedType)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_signature()) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    if (has_serialized_tx()) {
      GOOGLE_DCHECK(!serialized_tx_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialized_tx_.UnsafeRawStringPointer())->clear();
    }
  }
  signature_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxRequestSerializedType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.TxRequestSerializedType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 signature_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_signature_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signature_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_tx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.TxRequestSerializedType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.TxRequestSerializedType)
  return false;
#undef DO_
}

void TxRequestSerializedType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.TxRequestSerializedType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 signature_index = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->signature_index(), output);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  // optional bytes serialized_tx = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->serialized_tx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.TxRequestSerializedType)
}

::google::protobuf::uint8* TxRequestSerializedType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.TxRequestSerializedType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 signature_index = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->signature_index(), target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  // optional bytes serialized_tx = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->serialized_tx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.TxRequestSerializedType)
  return target;
}

size_t TxRequestSerializedType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.TxRequestSerializedType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes signature = 2;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

    // optional bytes serialized_tx = 3;
    if (has_serialized_tx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_tx());
    }

    // optional uint32 signature_index = 1;
    if (has_signature_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->signature_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxRequestSerializedType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.TxRequestSerializedType)
  GOOGLE_DCHECK_NE(&from, this);
  const TxRequestSerializedType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxRequestSerializedType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.TxRequestSerializedType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.TxRequestSerializedType)
    MergeFrom(*source);
  }
}

void TxRequestSerializedType::MergeFrom(const TxRequestSerializedType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.TxRequestSerializedType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_serialized_tx();
      serialized_tx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_tx_);
    }
    if (cached_has_bits & 0x00000004u) {
      signature_index_ = from.signature_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxRequestSerializedType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.TxRequestSerializedType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxRequestSerializedType::CopyFrom(const TxRequestSerializedType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.TxRequestSerializedType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxRequestSerializedType::IsInitialized() const {
  return true;
}

void TxRequestSerializedType::Swap(TxRequestSerializedType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxRequestSerializedType::InternalSwap(TxRequestSerializedType* other) {
  signature_.Swap(&other->signature_);
  serialized_tx_.Swap(&other->serialized_tx_);
  std::swap(signature_index_, other->signature_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxRequestSerializedType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxRequestSerializedType

// optional uint32 signature_index = 1;
bool TxRequestSerializedType::has_signature_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TxRequestSerializedType::set_has_signature_index() {
  _has_bits_[0] |= 0x00000004u;
}
void TxRequestSerializedType::clear_has_signature_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void TxRequestSerializedType::clear_signature_index() {
  signature_index_ = 0u;
  clear_has_signature_index();
}
::google::protobuf::uint32 TxRequestSerializedType::signature_index() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxRequestSerializedType.signature_index)
  return signature_index_;
}
void TxRequestSerializedType::set_signature_index(::google::protobuf::uint32 value) {
  set_has_signature_index();
  signature_index_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxRequestSerializedType.signature_index)
}

// optional bytes signature = 2;
bool TxRequestSerializedType::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxRequestSerializedType::set_has_signature() {
  _has_bits_[0] |= 0x00000001u;
}
void TxRequestSerializedType::clear_has_signature() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxRequestSerializedType::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& TxRequestSerializedType::signature() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxRequestSerializedType.signature)
  return signature_.GetNoArena();
}
void TxRequestSerializedType::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxRequestSerializedType.signature)
}
#if LANG_CXX11
void TxRequestSerializedType::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TxRequestSerializedType.signature)
}
#endif
void TxRequestSerializedType::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TxRequestSerializedType.signature)
}
void TxRequestSerializedType::set_signature(const void* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TxRequestSerializedType.signature)
}
::std::string* TxRequestSerializedType::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxRequestSerializedType.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxRequestSerializedType::release_signature() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxRequestSerializedType.signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxRequestSerializedType::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxRequestSerializedType.signature)
}

// optional bytes serialized_tx = 3;
bool TxRequestSerializedType::has_serialized_tx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxRequestSerializedType::set_has_serialized_tx() {
  _has_bits_[0] |= 0x00000002u;
}
void TxRequestSerializedType::clear_has_serialized_tx() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxRequestSerializedType::clear_serialized_tx() {
  serialized_tx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialized_tx();
}
const ::std::string& TxRequestSerializedType::serialized_tx() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.TxRequestSerializedType.serialized_tx)
  return serialized_tx_.GetNoArena();
}
void TxRequestSerializedType::set_serialized_tx(const ::std::string& value) {
  set_has_serialized_tx();
  serialized_tx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.TxRequestSerializedType.serialized_tx)
}
#if LANG_CXX11
void TxRequestSerializedType::set_serialized_tx(::std::string&& value) {
  set_has_serialized_tx();
  serialized_tx_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.TxRequestSerializedType.serialized_tx)
}
#endif
void TxRequestSerializedType::set_serialized_tx(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialized_tx();
  serialized_tx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.TxRequestSerializedType.serialized_tx)
}
void TxRequestSerializedType::set_serialized_tx(const void* value, size_t size) {
  set_has_serialized_tx();
  serialized_tx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.TxRequestSerializedType.serialized_tx)
}
::std::string* TxRequestSerializedType::mutable_serialized_tx() {
  set_has_serialized_tx();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.TxRequestSerializedType.serialized_tx)
  return serialized_tx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxRequestSerializedType::release_serialized_tx() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.TxRequestSerializedType.serialized_tx)
  clear_has_serialized_tx();
  return serialized_tx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxRequestSerializedType::set_allocated_serialized_tx(::std::string* serialized_tx) {
  if (serialized_tx != NULL) {
    set_has_serialized_tx();
  } else {
    clear_has_serialized_tx();
  }
  serialized_tx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialized_tx);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.TxRequestSerializedType.serialized_tx)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentityType::kProtoFieldNumber;
const int IdentityType::kUserFieldNumber;
const int IdentityType::kHostFieldNumber;
const int IdentityType::kPortFieldNumber;
const int IdentityType::kPathFieldNumber;
const int IdentityType::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentityType::IdentityType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.IdentityType)
}
IdentityType::IdentityType(const IdentityType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  proto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_proto()) {
    proto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proto_);
  }
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user()) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_port()) {
    port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.IdentityType)
}

void IdentityType::SharedCtor() {
  _cached_size_ = 0;
  proto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = 0u;
}

IdentityType::~IdentityType() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.IdentityType)
  SharedDtor();
}

void IdentityType::SharedDtor() {
  proto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdentityType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdentityType::descriptor() {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdentityType& IdentityType::default_instance() {
  protobuf_types_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdentityType* IdentityType::New(::google::protobuf::Arena* arena) const {
  IdentityType* n = new IdentityType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdentityType::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.IdentityType)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_proto()) {
      GOOGLE_DCHECK(!proto_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*proto_.UnsafeRawStringPointer())->clear();
    }
    if (has_user()) {
      GOOGLE_DCHECK(!user_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_.UnsafeRawStringPointer())->clear();
    }
    if (has_host()) {
      GOOGLE_DCHECK(!host_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*host_.UnsafeRawStringPointer())->clear();
    }
    if (has_port()) {
      GOOGLE_DCHECK(!port_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*port_.UnsafeRawStringPointer())->clear();
    }
    if (has_path()) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
  }
  index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IdentityType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.IdentityType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string proto = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proto()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->proto().data(), this->proto().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.IdentityType.proto");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.IdentityType.user");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.IdentityType.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->port().data(), this->port().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.IdentityType.port");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.IdentityType.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 index = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.IdentityType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.IdentityType)
  return false;
#undef DO_
}

void IdentityType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.IdentityType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string proto = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->proto().data(), this->proto().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.proto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->proto(), output);
  }

  // optional string user = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user(), output);
  }

  // optional string host = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->host(), output);
  }

  // optional string port = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->port().data(), this->port().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.port");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->port(), output);
  }

  // optional string path = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->path(), output);
  }

  // optional uint32 index = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.IdentityType)
}

::google::protobuf::uint8* IdentityType::InternalSerializeWithCachedSizesToArray(
    bool deterministic __attribute__((unused)), ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.IdentityType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string proto = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->proto().data(), this->proto().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.proto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->proto(), target);
  }

  // optional string user = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user(), target);
  }

  // optional string host = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->host(), target);
  }

  // optional string port = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->port().data(), this->port().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.port");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->port(), target);
  }

  // optional string path = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.IdentityType.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->path(), target);
  }

  // optional uint32 index = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.IdentityType)
  return target;
}

size_t IdentityType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.IdentityType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string proto = 1;
    if (has_proto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->proto());
    }

    // optional string user = 2;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user());
    }

    // optional string host = 3;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional string port = 4;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->port());
    }

    // optional string path = 5;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional uint32 index = 6 [default = 0];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdentityType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.IdentityType)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentityType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdentityType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.IdentityType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.IdentityType)
    MergeFrom(*source);
  }
}

void IdentityType::MergeFrom(const IdentityType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.IdentityType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_proto();
      proto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proto_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_user();
      user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_port();
      port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000020u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IdentityType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.IdentityType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentityType::CopyFrom(const IdentityType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.IdentityType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentityType::IsInitialized() const {
  return true;
}

void IdentityType::Swap(IdentityType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentityType::InternalSwap(IdentityType* other) {
  proto_.Swap(&other->proto_);
  user_.Swap(&other->user_);
  host_.Swap(&other->host_);
  port_.Swap(&other->port_);
  path_.Swap(&other->path_);
  std::swap(index_, other->index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdentityType::GetMetadata() const {
  protobuf_types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_types_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdentityType

// optional string proto = 1;
bool IdentityType::has_proto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IdentityType::set_has_proto() {
  _has_bits_[0] |= 0x00000001u;
}
void IdentityType::clear_has_proto() {
  _has_bits_[0] &= ~0x00000001u;
}
void IdentityType::clear_proto() {
  proto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_proto();
}
const ::std::string& IdentityType::proto() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.IdentityType.proto)
  return proto_.GetNoArena();
}
void IdentityType::set_proto(const ::std::string& value) {
  set_has_proto();
  proto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.IdentityType.proto)
}
#if LANG_CXX11
void IdentityType::set_proto(::std::string&& value) {
  set_has_proto();
  proto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.IdentityType.proto)
}
#endif
void IdentityType::set_proto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_proto();
  proto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.IdentityType.proto)
}
void IdentityType::set_proto(const char* value, size_t size) {
  set_has_proto();
  proto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.IdentityType.proto)
}
::std::string* IdentityType::mutable_proto() {
  set_has_proto();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.IdentityType.proto)
  return proto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdentityType::release_proto() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.IdentityType.proto)
  clear_has_proto();
  return proto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdentityType::set_allocated_proto(::std::string* proto) {
  if (proto != NULL) {
    set_has_proto();
  } else {
    clear_has_proto();
  }
  proto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proto);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.IdentityType.proto)
}

// optional string user = 2;
bool IdentityType::has_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void IdentityType::set_has_user() {
  _has_bits_[0] |= 0x00000002u;
}
void IdentityType::clear_has_user() {
  _has_bits_[0] &= ~0x00000002u;
}
void IdentityType::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
const ::std::string& IdentityType::user() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.IdentityType.user)
  return user_.GetNoArena();
}
void IdentityType::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.IdentityType.user)
}
#if LANG_CXX11
void IdentityType::set_user(::std::string&& value) {
  set_has_user();
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.IdentityType.user)
}
#endif
void IdentityType::set_user(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.IdentityType.user)
}
void IdentityType::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.IdentityType.user)
}
::std::string* IdentityType::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.IdentityType.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdentityType::release_user() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.IdentityType.user)
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdentityType::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.IdentityType.user)
}

// optional string host = 3;
bool IdentityType::has_host() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void IdentityType::set_has_host() {
  _has_bits_[0] |= 0x00000004u;
}
void IdentityType::clear_has_host() {
  _has_bits_[0] &= ~0x00000004u;
}
void IdentityType::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
const ::std::string& IdentityType::host() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.IdentityType.host)
  return host_.GetNoArena();
}
void IdentityType::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.IdentityType.host)
}
#if LANG_CXX11
void IdentityType::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.IdentityType.host)
}
#endif
void IdentityType::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.IdentityType.host)
}
void IdentityType::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.IdentityType.host)
}
::std::string* IdentityType::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.IdentityType.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdentityType::release_host() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.IdentityType.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdentityType::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.IdentityType.host)
}

// optional string port = 4;
bool IdentityType::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void IdentityType::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
void IdentityType::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
void IdentityType::clear_port() {
  port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_port();
}
const ::std::string& IdentityType::port() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.IdentityType.port)
  return port_.GetNoArena();
}
void IdentityType::set_port(const ::std::string& value) {
  set_has_port();
  port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.IdentityType.port)
}
#if LANG_CXX11
void IdentityType::set_port(::std::string&& value) {
  set_has_port();
  port_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.IdentityType.port)
}
#endif
void IdentityType::set_port(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_port();
  port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.IdentityType.port)
}
void IdentityType::set_port(const char* value, size_t size) {
  set_has_port();
  port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.IdentityType.port)
}
::std::string* IdentityType::mutable_port() {
  set_has_port();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.IdentityType.port)
  return port_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdentityType::release_port() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.IdentityType.port)
  clear_has_port();
  return port_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdentityType::set_allocated_port(::std::string* port) {
  if (port != NULL) {
    set_has_port();
  } else {
    clear_has_port();
  }
  port_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), port);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.IdentityType.port)
}

// optional string path = 5;
bool IdentityType::has_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void IdentityType::set_has_path() {
  _has_bits_[0] |= 0x00000010u;
}
void IdentityType::clear_has_path() {
  _has_bits_[0] &= ~0x00000010u;
}
void IdentityType::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& IdentityType::path() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.IdentityType.path)
  return path_.GetNoArena();
}
void IdentityType::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.IdentityType.path)
}
#if LANG_CXX11
void IdentityType::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.IdentityType.path)
}
#endif
void IdentityType::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.IdentityType.path)
}
void IdentityType::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.IdentityType.path)
}
::std::string* IdentityType::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.IdentityType.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdentityType::release_path() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.IdentityType.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdentityType::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.IdentityType.path)
}

// optional uint32 index = 6 [default = 0];
bool IdentityType::has_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void IdentityType::set_has_index() {
  _has_bits_[0] |= 0x00000020u;
}
void IdentityType::clear_has_index() {
  _has_bits_[0] &= ~0x00000020u;
}
void IdentityType::clear_index() {
  index_ = 0u;
  clear_has_index();
}
::google::protobuf::uint32 IdentityType::index() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.IdentityType.index)
  return index_;
}
void IdentityType::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.IdentityType.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_in(kWireInFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_out(kWireOutFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_debug_in(kWireDebugInFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_debug_out(kWireDebugOutFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_tiny(kWireTinyFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_bootloader(kWireBootloaderFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)

}  // namespace TrezorProtobuf

// @@protoc_insertion_point(global_scope)
