// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "storage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TrezorProtobuf {
class StorageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Storage> {
} _Storage_default_instance_;

namespace protobuf_storage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, mnemonic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, passphrase_protection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, pin_failed_attempts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, imported_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, homescreen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Storage, u2f_counter_),
  6,
  5,
  0,
  8,
  7,
  1,
  2,
  3,
  9,
  4,
  10,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 16, sizeof(Storage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Storage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "storage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _Storage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::TrezorProtobuf::protobuf_types_2eproto::InitDefaults();
  _Storage_default_instance_.DefaultConstruct();
  _Storage_default_instance_.get_mutable()->node_ = const_cast< ::TrezorProtobuf::HDNodeType*>(
      ::TrezorProtobuf::HDNodeType::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rstorage.proto\022\016TrezorProtobuf\032\013types.p"
      "roto\"\373\001\n\007Storage\022\017\n\007version\030\001 \002(\r\022(\n\004nod"
      "e\030\002 \001(\0132\032.TrezorProtobuf.HDNodeType\022\020\n\010m"
      "nemonic\030\003 \001(\t\022\035\n\025passphrase_protection\030\004"
      " \001(\010\022\033\n\023pin_failed_attempts\030\005 \001(\r\022\013\n\003pin"
      "\030\006 \001(\t\022\020\n\010language\030\007 \001(\t\022\r\n\005label\030\010 \001(\t\022"
      "\020\n\010imported\030\t \001(\010\022\022\n\nhomescreen\030\n \001(\014\022\023\n"
      "\013u2f_counter\030\013 \001(\rB0\n\037com.satoshilabs.tr"
      "ezor.protobufB\rTrezorStorage"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 348);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "storage.proto", &protobuf_RegisterTypes);
  ::TrezorProtobuf::protobuf_types_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_storage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Storage::kVersionFieldNumber;
const int Storage::kNodeFieldNumber;
const int Storage::kMnemonicFieldNumber;
const int Storage::kPassphraseProtectionFieldNumber;
const int Storage::kPinFailedAttemptsFieldNumber;
const int Storage::kPinFieldNumber;
const int Storage::kLanguageFieldNumber;
const int Storage::kLabelFieldNumber;
const int Storage::kImportedFieldNumber;
const int Storage::kHomescreenFieldNumber;
const int Storage::kU2FCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Storage::Storage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_storage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrezorProtobuf.Storage)
}
Storage::Storage(const Storage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mnemonic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mnemonic()) {
    mnemonic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mnemonic_);
  }
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pin()) {
    pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  homescreen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_homescreen()) {
    homescreen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homescreen_);
  }
  if (from.has_node()) {
    node_ = new ::TrezorProtobuf::HDNodeType(*from.node_);
  } else {
    node_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&u2f_counter_) -
    reinterpret_cast<char*>(&version_) + sizeof(u2f_counter_));
  // @@protoc_insertion_point(copy_constructor:TrezorProtobuf.Storage)
}

void Storage::SharedCtor() {
  _cached_size_ = 0;
  mnemonic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homescreen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_, 0, reinterpret_cast<char*>(&u2f_counter_) -
    reinterpret_cast<char*>(&node_) + sizeof(u2f_counter_));
}

Storage::~Storage() {
  // @@protoc_insertion_point(destructor:TrezorProtobuf.Storage)
  SharedDtor();
}

void Storage::SharedDtor() {
  mnemonic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homescreen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete node_;
  }
}

void Storage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Storage::descriptor() {
  protobuf_storage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_storage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Storage& Storage::default_instance() {
  protobuf_storage_2eproto::InitDefaults();
  return *internal_default_instance();
}

Storage* Storage::New(::google::protobuf::Arena* arena) const {
  Storage* n = new Storage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Storage::Clear() {
// @@protoc_insertion_point(message_clear_start:TrezorProtobuf.Storage)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_mnemonic()) {
      GOOGLE_DCHECK(!mnemonic_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mnemonic_.UnsafeRawStringPointer())->clear();
    }
    if (has_pin()) {
      GOOGLE_DCHECK(!pin_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pin_.UnsafeRawStringPointer())->clear();
    }
    if (has_language()) {
      GOOGLE_DCHECK(!language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*language_.UnsafeRawStringPointer())->clear();
    }
    if (has_label()) {
      GOOGLE_DCHECK(!label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*label_.UnsafeRawStringPointer())->clear();
    }
    if (has_homescreen()) {
      GOOGLE_DCHECK(!homescreen_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*homescreen_.UnsafeRawStringPointer())->clear();
    }
    if (has_node()) {
      GOOGLE_DCHECK(node_ != NULL);
      node_->::TrezorProtobuf::HDNodeType::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&pin_failed_attempts_) -
      reinterpret_cast<char*>(&version_) + sizeof(pin_failed_attempts_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&passphrase_protection_, 0, reinterpret_cast<char*>(&u2f_counter_) -
      reinterpret_cast<char*>(&passphrase_protection_) + sizeof(u2f_counter_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Storage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrezorProtobuf.Storage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TrezorProtobuf.HDNodeType node = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mnemonic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mnemonic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mnemonic().data(), this->mnemonic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.Storage.mnemonic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool passphrase_protection = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_passphrase_protection();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passphrase_protection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pin_failed_attempts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_pin_failed_attempts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pin_failed_attempts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pin().data(), this->pin().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.Storage.pin");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string language = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.Storage.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrezorProtobuf.Storage.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool imported = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_imported();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &imported_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes homescreen = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_homescreen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 u2f_counter = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_u2f_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u2f_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrezorProtobuf.Storage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrezorProtobuf.Storage)
  return false;
#undef DO_
}

void Storage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrezorProtobuf.Storage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 version = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional .TrezorProtobuf.HDNodeType node = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->node_, output);
  }

  // optional string mnemonic = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mnemonic().data(), this->mnemonic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.Storage.mnemonic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mnemonic(), output);
  }

  // optional bool passphrase_protection = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->passphrase_protection(), output);
  }

  // optional uint32 pin_failed_attempts = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pin_failed_attempts(), output);
  }

  // optional string pin = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pin().data(), this->pin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.Storage.pin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pin(), output);
  }

  // optional string language = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.Storage.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->language(), output);
  }

  // optional string label = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.Storage.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->label(), output);
  }

  // optional bool imported = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->imported(), output);
  }

  // optional bytes homescreen = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->homescreen(), output);
  }

  // optional uint32 u2f_counter = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->u2f_counter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrezorProtobuf.Storage)
}

::google::protobuf::uint8* Storage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrezorProtobuf.Storage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 version = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional .TrezorProtobuf.HDNodeType node = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->node_, deterministic, target);
  }

  // optional string mnemonic = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mnemonic().data(), this->mnemonic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.Storage.mnemonic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mnemonic(), target);
  }

  // optional bool passphrase_protection = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->passphrase_protection(), target);
  }

  // optional uint32 pin_failed_attempts = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pin_failed_attempts(), target);
  }

  // optional string pin = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pin().data(), this->pin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.Storage.pin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pin(), target);
  }

  // optional string language = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.Storage.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->language(), target);
  }

  // optional string label = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrezorProtobuf.Storage.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->label(), target);
  }

  // optional bool imported = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->imported(), target);
  }

  // optional bytes homescreen = 10;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->homescreen(), target);
  }

  // optional uint32 u2f_counter = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->u2f_counter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrezorProtobuf.Storage)
  return target;
}

size_t Storage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrezorProtobuf.Storage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 version = 1;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string mnemonic = 3;
    if (has_mnemonic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mnemonic());
    }

    // optional string pin = 6;
    if (has_pin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pin());
    }

    // optional string language = 7;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional string label = 8;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional bytes homescreen = 10;
    if (has_homescreen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->homescreen());
    }

    // optional .TrezorProtobuf.HDNodeType node = 2;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->node_);
    }

  }
  // optional uint32 pin_failed_attempts = 5;
  if (has_pin_failed_attempts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pin_failed_attempts());
  }

  if (_has_bits_[8 / 32] & 1792u) {
    // optional bool passphrase_protection = 4;
    if (has_passphrase_protection()) {
      total_size += 1 + 1;
    }

    // optional bool imported = 9;
    if (has_imported()) {
      total_size += 1 + 1;
    }

    // optional uint32 u2f_counter = 11;
    if (has_u2f_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->u2f_counter());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Storage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrezorProtobuf.Storage)
  GOOGLE_DCHECK_NE(&from, this);
  const Storage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Storage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrezorProtobuf.Storage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrezorProtobuf.Storage)
    MergeFrom(*source);
  }
}

void Storage::MergeFrom(const Storage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrezorProtobuf.Storage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_mnemonic();
      mnemonic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mnemonic_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pin();
      pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_language();
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_homescreen();
      homescreen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homescreen_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_node()->::TrezorProtobuf::HDNodeType::MergeFrom(from.node());
    }
    if (cached_has_bits & 0x00000040u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000080u) {
      pin_failed_attempts_ = from.pin_failed_attempts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      passphrase_protection_ = from.passphrase_protection_;
    }
    if (cached_has_bits & 0x00000200u) {
      imported_ = from.imported_;
    }
    if (cached_has_bits & 0x00000400u) {
      u2f_counter_ = from.u2f_counter_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Storage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrezorProtobuf.Storage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Storage::CopyFrom(const Storage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrezorProtobuf.Storage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Storage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;
  if (has_node()) {
    if (!this->node_->IsInitialized()) return false;
  }
  return true;
}

void Storage::Swap(Storage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Storage::InternalSwap(Storage* other) {
  mnemonic_.Swap(&other->mnemonic_);
  pin_.Swap(&other->pin_);
  language_.Swap(&other->language_);
  label_.Swap(&other->label_);
  homescreen_.Swap(&other->homescreen_);
  std::swap(node_, other->node_);
  std::swap(version_, other->version_);
  std::swap(pin_failed_attempts_, other->pin_failed_attempts_);
  std::swap(passphrase_protection_, other->passphrase_protection_);
  std::swap(imported_, other->imported_);
  std::swap(u2f_counter_, other->u2f_counter_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Storage::GetMetadata() const {
  protobuf_storage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_storage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Storage

// required uint32 version = 1;
bool Storage::has_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Storage::set_has_version() {
  _has_bits_[0] |= 0x00000040u;
}
void Storage::clear_has_version() {
  _has_bits_[0] &= ~0x00000040u;
}
void Storage::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 Storage::version() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.version)
  return version_;
}
void Storage::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.version)
}

// optional .TrezorProtobuf.HDNodeType node = 2;
bool Storage::has_node() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Storage::set_has_node() {
  _has_bits_[0] |= 0x00000020u;
}
void Storage::clear_has_node() {
  _has_bits_[0] &= ~0x00000020u;
}
void Storage::clear_node() {
  if (node_ != NULL) node_->::TrezorProtobuf::HDNodeType::Clear();
  clear_has_node();
}
const ::TrezorProtobuf::HDNodeType& Storage::node() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.node)
  return node_ != NULL ? *node_
                         : *::TrezorProtobuf::HDNodeType::internal_default_instance();
}
::TrezorProtobuf::HDNodeType* Storage::mutable_node() {
  set_has_node();
  if (node_ == NULL) {
    node_ = new ::TrezorProtobuf::HDNodeType;
  }
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Storage.node)
  return node_;
}
::TrezorProtobuf::HDNodeType* Storage::release_node() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.Storage.node)
  clear_has_node();
  ::TrezorProtobuf::HDNodeType* temp = node_;
  node_ = NULL;
  return temp;
}
void Storage::set_allocated_node(::TrezorProtobuf::HDNodeType* node) {
  delete node_;
  node_ = node;
  if (node) {
    set_has_node();
  } else {
    clear_has_node();
  }
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.Storage.node)
}

// optional string mnemonic = 3;
bool Storage::has_mnemonic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Storage::set_has_mnemonic() {
  _has_bits_[0] |= 0x00000001u;
}
void Storage::clear_has_mnemonic() {
  _has_bits_[0] &= ~0x00000001u;
}
void Storage::clear_mnemonic() {
  mnemonic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mnemonic();
}
const ::std::string& Storage::mnemonic() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.mnemonic)
  return mnemonic_.GetNoArena();
}
void Storage::set_mnemonic(const ::std::string& value) {
  set_has_mnemonic();
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.mnemonic)
}
#if LANG_CXX11
void Storage::set_mnemonic(::std::string&& value) {
  set_has_mnemonic();
  mnemonic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.Storage.mnemonic)
}
#endif
void Storage::set_mnemonic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mnemonic();
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.Storage.mnemonic)
}
void Storage::set_mnemonic(const char* value, size_t size) {
  set_has_mnemonic();
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.Storage.mnemonic)
}
::std::string* Storage::mutable_mnemonic() {
  set_has_mnemonic();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Storage.mnemonic)
  return mnemonic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Storage::release_mnemonic() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.Storage.mnemonic)
  clear_has_mnemonic();
  return mnemonic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Storage::set_allocated_mnemonic(::std::string* mnemonic) {
  if (mnemonic != NULL) {
    set_has_mnemonic();
  } else {
    clear_has_mnemonic();
  }
  mnemonic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mnemonic);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.Storage.mnemonic)
}

// optional bool passphrase_protection = 4;
bool Storage::has_passphrase_protection() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Storage::set_has_passphrase_protection() {
  _has_bits_[0] |= 0x00000100u;
}
void Storage::clear_has_passphrase_protection() {
  _has_bits_[0] &= ~0x00000100u;
}
void Storage::clear_passphrase_protection() {
  passphrase_protection_ = false;
  clear_has_passphrase_protection();
}
bool Storage::passphrase_protection() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.passphrase_protection)
  return passphrase_protection_;
}
void Storage::set_passphrase_protection(bool value) {
  set_has_passphrase_protection();
  passphrase_protection_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.passphrase_protection)
}

// optional uint32 pin_failed_attempts = 5;
bool Storage::has_pin_failed_attempts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Storage::set_has_pin_failed_attempts() {
  _has_bits_[0] |= 0x00000080u;
}
void Storage::clear_has_pin_failed_attempts() {
  _has_bits_[0] &= ~0x00000080u;
}
void Storage::clear_pin_failed_attempts() {
  pin_failed_attempts_ = 0u;
  clear_has_pin_failed_attempts();
}
::google::protobuf::uint32 Storage::pin_failed_attempts() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.pin_failed_attempts)
  return pin_failed_attempts_;
}
void Storage::set_pin_failed_attempts(::google::protobuf::uint32 value) {
  set_has_pin_failed_attempts();
  pin_failed_attempts_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.pin_failed_attempts)
}

// optional string pin = 6;
bool Storage::has_pin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Storage::set_has_pin() {
  _has_bits_[0] |= 0x00000002u;
}
void Storage::clear_has_pin() {
  _has_bits_[0] &= ~0x00000002u;
}
void Storage::clear_pin() {
  pin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pin();
}
const ::std::string& Storage::pin() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.pin)
  return pin_.GetNoArena();
}
void Storage::set_pin(const ::std::string& value) {
  set_has_pin();
  pin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.pin)
}
#if LANG_CXX11
void Storage::set_pin(::std::string&& value) {
  set_has_pin();
  pin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.Storage.pin)
}
#endif
void Storage::set_pin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pin();
  pin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.Storage.pin)
}
void Storage::set_pin(const char* value, size_t size) {
  set_has_pin();
  pin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.Storage.pin)
}
::std::string* Storage::mutable_pin() {
  set_has_pin();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Storage.pin)
  return pin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Storage::release_pin() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.Storage.pin)
  clear_has_pin();
  return pin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Storage::set_allocated_pin(::std::string* pin) {
  if (pin != NULL) {
    set_has_pin();
  } else {
    clear_has_pin();
  }
  pin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pin);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.Storage.pin)
}

// optional string language = 7;
bool Storage::has_language() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Storage::set_has_language() {
  _has_bits_[0] |= 0x00000004u;
}
void Storage::clear_has_language() {
  _has_bits_[0] &= ~0x00000004u;
}
void Storage::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
const ::std::string& Storage::language() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.language)
  return language_.GetNoArena();
}
void Storage::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.language)
}
#if LANG_CXX11
void Storage::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.Storage.language)
}
#endif
void Storage::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.Storage.language)
}
void Storage::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.Storage.language)
}
::std::string* Storage::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Storage.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Storage::release_language() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.Storage.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Storage::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.Storage.language)
}

// optional string label = 8;
bool Storage::has_label() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Storage::set_has_label() {
  _has_bits_[0] |= 0x00000008u;
}
void Storage::clear_has_label() {
  _has_bits_[0] &= ~0x00000008u;
}
void Storage::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
const ::std::string& Storage::label() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.label)
  return label_.GetNoArena();
}
void Storage::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.label)
}
#if LANG_CXX11
void Storage::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.Storage.label)
}
#endif
void Storage::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.Storage.label)
}
void Storage::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.Storage.label)
}
::std::string* Storage::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Storage.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Storage::release_label() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.Storage.label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Storage::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.Storage.label)
}

// optional bool imported = 9;
bool Storage::has_imported() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Storage::set_has_imported() {
  _has_bits_[0] |= 0x00000200u;
}
void Storage::clear_has_imported() {
  _has_bits_[0] &= ~0x00000200u;
}
void Storage::clear_imported() {
  imported_ = false;
  clear_has_imported();
}
bool Storage::imported() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.imported)
  return imported_;
}
void Storage::set_imported(bool value) {
  set_has_imported();
  imported_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.imported)
}

// optional bytes homescreen = 10;
bool Storage::has_homescreen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Storage::set_has_homescreen() {
  _has_bits_[0] |= 0x00000010u;
}
void Storage::clear_has_homescreen() {
  _has_bits_[0] &= ~0x00000010u;
}
void Storage::clear_homescreen() {
  homescreen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_homescreen();
}
const ::std::string& Storage::homescreen() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.homescreen)
  return homescreen_.GetNoArena();
}
void Storage::set_homescreen(const ::std::string& value) {
  set_has_homescreen();
  homescreen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.homescreen)
}
#if LANG_CXX11
void Storage::set_homescreen(::std::string&& value) {
  set_has_homescreen();
  homescreen_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrezorProtobuf.Storage.homescreen)
}
#endif
void Storage::set_homescreen(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_homescreen();
  homescreen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrezorProtobuf.Storage.homescreen)
}
void Storage::set_homescreen(const void* value, size_t size) {
  set_has_homescreen();
  homescreen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrezorProtobuf.Storage.homescreen)
}
::std::string* Storage::mutable_homescreen() {
  set_has_homescreen();
  // @@protoc_insertion_point(field_mutable:TrezorProtobuf.Storage.homescreen)
  return homescreen_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Storage::release_homescreen() {
  // @@protoc_insertion_point(field_release:TrezorProtobuf.Storage.homescreen)
  clear_has_homescreen();
  return homescreen_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Storage::set_allocated_homescreen(::std::string* homescreen) {
  if (homescreen != NULL) {
    set_has_homescreen();
  } else {
    clear_has_homescreen();
  }
  homescreen_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), homescreen);
  // @@protoc_insertion_point(field_set_allocated:TrezorProtobuf.Storage.homescreen)
}

// optional uint32 u2f_counter = 11;
bool Storage::has_u2f_counter() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Storage::set_has_u2f_counter() {
  _has_bits_[0] |= 0x00000400u;
}
void Storage::clear_has_u2f_counter() {
  _has_bits_[0] &= ~0x00000400u;
}
void Storage::clear_u2f_counter() {
  u2f_counter_ = 0u;
  clear_has_u2f_counter();
}
::google::protobuf::uint32 Storage::u2f_counter() const {
  // @@protoc_insertion_point(field_get:TrezorProtobuf.Storage.u2f_counter)
  return u2f_counter_;
}
void Storage::set_u2f_counter(::google::protobuf::uint32 value) {
  set_has_u2f_counter();
  u2f_counter_ = value;
  // @@protoc_insertion_point(field_set:TrezorProtobuf.Storage.u2f_counter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace TrezorProtobuf

// @@protoc_insertion_point(global_scope)
